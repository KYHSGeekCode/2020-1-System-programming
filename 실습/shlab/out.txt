
tshref:     file format elf64-x86-64


Disassembly of section .init:

0000000000400b48 <_init>:
  400b48:	48 83 ec 08          	sub    $0x8,%rsp
  400b4c:	48 8b 05 a5 24 20 00 	mov    0x2024a5(%rip),%rax        # 602ff8 <__gmon_start__>
  400b53:	48 85 c0             	test   %rax,%rax
  400b56:	74 05                	je     400b5d <_init+0x15>
  400b58:	e8 f3 01 00 00       	callq  400d50 <__gmon_start__@plt>
  400b5d:	48 83 c4 08          	add    $0x8,%rsp
  400b61:	c3                   	retq   

Disassembly of section .plt:

0000000000400b70 <.plt>:
  400b70:	ff 35 92 24 20 00    	pushq  0x202492(%rip)        # 603008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400b76:	ff 25 94 24 20 00    	jmpq   *0x202494(%rip)        # 603010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400b7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400b80 <sigprocmask@plt>:
  400b80:	ff 25 92 24 20 00    	jmpq   *0x202492(%rip)        # 603018 <sigprocmask@GLIBC_2.2.5>
  400b86:	68 00 00 00 00       	pushq  $0x0
  400b8b:	e9 e0 ff ff ff       	jmpq   400b70 <.plt>

0000000000400b90 <__errno_location@plt>:
  400b90:	ff 25 8a 24 20 00    	jmpq   *0x20248a(%rip)        # 603020 <__errno_location@GLIBC_2.2.5>
  400b96:	68 01 00 00 00       	pushq  $0x1
  400b9b:	e9 d0 ff ff ff       	jmpq   400b70 <.plt>

0000000000400ba0 <strcpy@plt>:
  400ba0:	ff 25 82 24 20 00    	jmpq   *0x202482(%rip)        # 603028 <strcpy@GLIBC_2.2.5>
  400ba6:	68 02 00 00 00       	pushq  $0x2
  400bab:	e9 c0 ff ff ff       	jmpq   400b70 <.plt>

0000000000400bb0 <puts@plt>:
  400bb0:	ff 25 7a 24 20 00    	jmpq   *0x20247a(%rip)        # 603030 <puts@GLIBC_2.2.5>
  400bb6:	68 03 00 00 00       	pushq  $0x3
  400bbb:	e9 b0 ff ff ff       	jmpq   400b70 <.plt>

0000000000400bc0 <ferror@plt>:
  400bc0:	ff 25 72 24 20 00    	jmpq   *0x202472(%rip)        # 603038 <ferror@GLIBC_2.2.5>
  400bc6:	68 04 00 00 00       	pushq  $0x4
  400bcb:	e9 a0 ff ff ff       	jmpq   400b70 <.plt>

0000000000400bd0 <sigaction@plt>:
  400bd0:	ff 25 6a 24 20 00    	jmpq   *0x20246a(%rip)        # 603040 <sigaction@GLIBC_2.2.5>
  400bd6:	68 05 00 00 00       	pushq  $0x5
  400bdb:	e9 90 ff ff ff       	jmpq   400b70 <.plt>

0000000000400be0 <__stack_chk_fail@plt>:
  400be0:	ff 25 62 24 20 00    	jmpq   *0x202462(%rip)        # 603048 <__stack_chk_fail@GLIBC_2.4>
  400be6:	68 06 00 00 00       	pushq  $0x6
  400beb:	e9 80 ff ff ff       	jmpq   400b70 <.plt>

0000000000400bf0 <dup2@plt>:
  400bf0:	ff 25 5a 24 20 00    	jmpq   *0x20245a(%rip)        # 603050 <dup2@GLIBC_2.2.5>
  400bf6:	68 07 00 00 00       	pushq  $0x7
  400bfb:	e9 70 ff ff ff       	jmpq   400b70 <.plt>

0000000000400c00 <strchr@plt>:
  400c00:	ff 25 52 24 20 00    	jmpq   *0x202452(%rip)        # 603058 <strchr@GLIBC_2.2.5>
  400c06:	68 08 00 00 00       	pushq  $0x8
  400c0b:	e9 60 ff ff ff       	jmpq   400b70 <.plt>

0000000000400c10 <__libc_start_main@plt>:
  400c10:	ff 25 4a 24 20 00    	jmpq   *0x20244a(%rip)        # 603060 <__libc_start_main@GLIBC_2.2.5>
  400c16:	68 09 00 00 00       	pushq  $0x9
  400c1b:	e9 50 ff ff ff       	jmpq   400b70 <.plt>

0000000000400c20 <fgets@plt>:
  400c20:	ff 25 42 24 20 00    	jmpq   *0x202442(%rip)        # 603068 <fgets@GLIBC_2.2.5>
  400c26:	68 0a 00 00 00       	pushq  $0xa
  400c2b:	e9 40 ff ff ff       	jmpq   400b70 <.plt>

0000000000400c30 <execve@plt>:
  400c30:	ff 25 3a 24 20 00    	jmpq   *0x20243a(%rip)        # 603070 <execve@GLIBC_2.2.5>
  400c36:	68 0b 00 00 00       	pushq  $0xb
  400c3b:	e9 30 ff ff ff       	jmpq   400b70 <.plt>

0000000000400c40 <sigemptyset@plt>:
  400c40:	ff 25 32 24 20 00    	jmpq   *0x202432(%rip)        # 603078 <sigemptyset@GLIBC_2.2.5>
  400c46:	68 0c 00 00 00       	pushq  $0xc
  400c4b:	e9 20 ff ff ff       	jmpq   400b70 <.plt>

0000000000400c50 <feof@plt>:
  400c50:	ff 25 2a 24 20 00    	jmpq   *0x20242a(%rip)        # 603080 <feof@GLIBC_2.2.5>
  400c56:	68 0d 00 00 00       	pushq  $0xd
  400c5b:	e9 10 ff ff ff       	jmpq   400b70 <.plt>

0000000000400c60 <strtol@plt>:
  400c60:	ff 25 22 24 20 00    	jmpq   *0x202422(%rip)        # 603088 <strtol@GLIBC_2.2.5>
  400c66:	68 0e 00 00 00       	pushq  $0xe
  400c6b:	e9 00 ff ff ff       	jmpq   400b70 <.plt>

0000000000400c70 <kill@plt>:
  400c70:	ff 25 1a 24 20 00    	jmpq   *0x20241a(%rip)        # 603090 <kill@GLIBC_2.2.5>
  400c76:	68 0f 00 00 00       	pushq  $0xf
  400c7b:	e9 f0 fe ff ff       	jmpq   400b70 <.plt>

0000000000400c80 <__stpcpy_chk@plt>:
  400c80:	ff 25 12 24 20 00    	jmpq   *0x202412(%rip)        # 603098 <__stpcpy_chk@GLIBC_2.3.4>
  400c86:	68 10 00 00 00       	pushq  $0x10
  400c8b:	e9 e0 fe ff ff       	jmpq   400b70 <.plt>

0000000000400c90 <fflush@plt>:
  400c90:	ff 25 0a 24 20 00    	jmpq   *0x20240a(%rip)        # 6030a0 <fflush@GLIBC_2.2.5>
  400c96:	68 11 00 00 00       	pushq  $0x11
  400c9b:	e9 d0 fe ff ff       	jmpq   400b70 <.plt>

0000000000400ca0 <__printf_chk@plt>:
  400ca0:	ff 25 02 24 20 00    	jmpq   *0x202402(%rip)        # 6030a8 <__printf_chk@GLIBC_2.3.4>
  400ca6:	68 12 00 00 00       	pushq  $0x12
  400cab:	e9 c0 fe ff ff       	jmpq   400b70 <.plt>

0000000000400cb0 <waitpid@plt>:
  400cb0:	ff 25 fa 23 20 00    	jmpq   *0x2023fa(%rip)        # 6030b0 <waitpid@GLIBC_2.2.5>
  400cb6:	68 13 00 00 00       	pushq  $0x13
  400cbb:	e9 b0 fe ff ff       	jmpq   400b70 <.plt>

0000000000400cc0 <getopt@plt>:
  400cc0:	ff 25 f2 23 20 00    	jmpq   *0x2023f2(%rip)        # 6030b8 <getopt@GLIBC_2.2.5>
  400cc6:	68 14 00 00 00       	pushq  $0x14
  400ccb:	e9 a0 fe ff ff       	jmpq   400b70 <.plt>

0000000000400cd0 <setpgid@plt>:
  400cd0:	ff 25 ea 23 20 00    	jmpq   *0x2023ea(%rip)        # 6030c0 <setpgid@GLIBC_2.2.5>
  400cd6:	68 15 00 00 00       	pushq  $0x15
  400cdb:	e9 90 fe ff ff       	jmpq   400b70 <.plt>

0000000000400ce0 <exit@plt>:
  400ce0:	ff 25 e2 23 20 00    	jmpq   *0x2023e2(%rip)        # 6030c8 <exit@GLIBC_2.2.5>
  400ce6:	68 16 00 00 00       	pushq  $0x16
  400ceb:	e9 80 fe ff ff       	jmpq   400b70 <.plt>

0000000000400cf0 <__fprintf_chk@plt>:
  400cf0:	ff 25 da 23 20 00    	jmpq   *0x2023da(%rip)        # 6030d0 <__fprintf_chk@GLIBC_2.3.4>
  400cf6:	68 17 00 00 00       	pushq  $0x17
  400cfb:	e9 70 fe ff ff       	jmpq   400b70 <.plt>

0000000000400d00 <strerror@plt>:
  400d00:	ff 25 d2 23 20 00    	jmpq   *0x2023d2(%rip)        # 6030d8 <strerror@GLIBC_2.2.5>
  400d06:	68 18 00 00 00       	pushq  $0x18
  400d0b:	e9 60 fe ff ff       	jmpq   400b70 <.plt>

0000000000400d10 <sleep@plt>:
  400d10:	ff 25 ca 23 20 00    	jmpq   *0x2023ca(%rip)        # 6030e0 <sleep@GLIBC_2.2.5>
  400d16:	68 19 00 00 00       	pushq  $0x19
  400d1b:	e9 50 fe ff ff       	jmpq   400b70 <.plt>

0000000000400d20 <sigaddset@plt>:
  400d20:	ff 25 c2 23 20 00    	jmpq   *0x2023c2(%rip)        # 6030e8 <sigaddset@GLIBC_2.2.5>
  400d26:	68 1a 00 00 00       	pushq  $0x1a
  400d2b:	e9 40 fe ff ff       	jmpq   400b70 <.plt>

0000000000400d30 <fork@plt>:
  400d30:	ff 25 ba 23 20 00    	jmpq   *0x2023ba(%rip)        # 6030f0 <fork@GLIBC_2.2.5>
  400d36:	68 1b 00 00 00       	pushq  $0x1b
  400d3b:	e9 30 fe ff ff       	jmpq   400b70 <.plt>

0000000000400d40 <__ctype_b_loc@plt>:
  400d40:	ff 25 b2 23 20 00    	jmpq   *0x2023b2(%rip)        # 6030f8 <__ctype_b_loc@GLIBC_2.3>
  400d46:	68 1c 00 00 00       	pushq  $0x1c
  400d4b:	e9 20 fe ff ff       	jmpq   400b70 <.plt>

Disassembly of section .plt.got:

0000000000400d50 <__gmon_start__@plt>:
  400d50:	ff 25 a2 22 20 00    	jmpq   *0x2022a2(%rip)        # 602ff8 <__gmon_start__>
  400d56:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400d60 <main>:
  400d60:	41 54                	push   %r12
  400d62:	55                   	push   %rbp
  400d63:	41 bc 01 00 00 00    	mov    $0x1,%r12d
  400d69:	53                   	push   %rbx
  400d6a:	89 fd                	mov    %edi,%ebp
  400d6c:	48 89 f3             	mov    %rsi,%rbx
  400d6f:	bf 01 00 00 00       	mov    $0x1,%edi
  400d74:	be 02 00 00 00       	mov    $0x2,%esi
  400d79:	48 81 ec 10 04 00 00 	sub    $0x410,%rsp
  400d80:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  400d87:	00 00 
  400d89:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
  400d90:	00 
  400d91:	31 c0                	xor    %eax,%eax
  400d93:	e8 58 fe ff ff       	callq  400bf0 <dup2@plt>
  400d98:	ba 01 25 40 00       	mov    $0x402501,%edx
  400d9d:	48 89 de             	mov    %rbx,%rsi
  400da0:	89 ef                	mov    %ebp,%edi
  400da2:	e8 19 ff ff ff       	callq  400cc0 <getopt@plt>
  400da7:	3c ff                	cmp    $0xff,%al
  400da9:	89 c2                	mov    %eax,%edx
  400dab:	74 1f                	je     400dcc <main+0x6c>
  400dad:	3c 70                	cmp    $0x70,%al
  400daf:	74 0a                	je     400dbb <main+0x5b>
  400db1:	80 fa 76             	cmp    $0x76,%dl
  400db4:	74 0a                	je     400dc0 <main+0x60>
  400db6:	e8 75 07 00 00       	callq  401530 <usage>
  400dbb:	45 31 e4             	xor    %r12d,%r12d
  400dbe:	eb d8                	jmp    400d98 <main+0x38>
  400dc0:	c7 05 96 23 20 00 01 	movl   $0x1,0x202396(%rip)        # 603160 <verbose>
  400dc7:	00 00 00 
  400dca:	eb cc                	jmp    400d98 <main+0x38>
  400dcc:	be 70 1d 40 00       	mov    $0x401d70,%esi
  400dd1:	bf 02 00 00 00       	mov    $0x2,%edi
  400dd6:	e8 65 11 00 00       	callq  401f40 <Signal>
  400ddb:	be 20 1e 40 00       	mov    $0x401e20,%esi
  400de0:	bf 14 00 00 00       	mov    $0x14,%edi
  400de5:	e8 56 11 00 00       	callq  401f40 <Signal>
  400dea:	be 90 1a 40 00       	mov    $0x401a90,%esi
  400def:	bf 11 00 00 00       	mov    $0x11,%edi
  400df4:	e8 47 11 00 00       	callq  401f40 <Signal>
  400df9:	be e0 0f 40 00       	mov    $0x400fe0,%esi
  400dfe:	bf 03 00 00 00       	mov    $0x3,%edi
  400e03:	e8 38 11 00 00       	callq  401f40 <Signal>
  400e08:	b8 80 39 60 00       	mov    $0x603980,%eax
  400e0d:	0f 1f 00             	nopl   (%rax)
  400e10:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  400e16:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
  400e1d:	48 05 0c 04 00 00    	add    $0x40c,%rax
  400e23:	c7 80 fc fb ff ff 00 	movl   $0x0,-0x404(%rax)
  400e2a:	00 00 00 
  400e2d:	c6 80 00 fc ff ff 00 	movb   $0x0,-0x400(%rax)
  400e34:	48 3d 40 7a 60 00    	cmp    $0x607a40,%rax
  400e3a:	75 d4                	jne    400e10 <main+0xb0>
  400e3c:	eb 6b                	jmp    400ea9 <main+0x149>
  400e3e:	bf 01 00 00 00       	mov    $0x1,%edi
  400e43:	ba 14 31 60 00       	mov    $0x603114,%edx
  400e48:	be 3e 23 40 00       	mov    $0x40233e,%esi
  400e4d:	31 c0                	xor    %eax,%eax
  400e4f:	e8 4c fe ff ff       	callq  400ca0 <__printf_chk@plt>
  400e54:	48 8b 3d c5 22 20 00 	mov    0x2022c5(%rip),%rdi        # 603120 <stdout@@GLIBC_2.2.5>
  400e5b:	e8 30 fe ff ff       	callq  400c90 <fflush@plt>
  400e60:	48 8b 15 c9 22 20 00 	mov    0x2022c9(%rip),%rdx        # 603130 <stdin@@GLIBC_2.2.5>
  400e67:	be 00 04 00 00       	mov    $0x400,%esi
  400e6c:	48 89 e7             	mov    %rsp,%rdi
  400e6f:	e8 ac fd ff ff       	callq  400c20 <fgets@plt>
  400e74:	48 85 c0             	test   %rax,%rax
  400e77:	74 37                	je     400eb0 <main+0x150>
  400e79:	48 8b 3d b0 22 20 00 	mov    0x2022b0(%rip),%rdi        # 603130 <stdin@@GLIBC_2.2.5>
  400e80:	e8 cb fd ff ff       	callq  400c50 <feof@plt>
  400e85:	85 c0                	test   %eax,%eax
  400e87:	75 41                	jne    400eca <main+0x16a>
  400e89:	48 89 e7             	mov    %rsp,%rdi
  400e8c:	e8 9f 09 00 00       	callq  401830 <eval>
  400e91:	48 8b 3d 88 22 20 00 	mov    0x202288(%rip),%rdi        # 603120 <stdout@@GLIBC_2.2.5>
  400e98:	e8 f3 fd ff ff       	callq  400c90 <fflush@plt>
  400e9d:	48 8b 3d 7c 22 20 00 	mov    0x20227c(%rip),%rdi        # 603120 <stdout@@GLIBC_2.2.5>
  400ea4:	e8 e7 fd ff ff       	callq  400c90 <fflush@plt>
  400ea9:	45 85 e4             	test   %r12d,%r12d
  400eac:	74 b2                	je     400e60 <main+0x100>
  400eae:	eb 8e                	jmp    400e3e <main+0xde>
  400eb0:	48 8b 3d 79 22 20 00 	mov    0x202279(%rip),%rdi        # 603130 <stdin@@GLIBC_2.2.5>
  400eb7:	e8 04 fd ff ff       	callq  400bc0 <ferror@plt>
  400ebc:	85 c0                	test   %eax,%eax
  400ebe:	74 b9                	je     400e79 <main+0x119>
  400ec0:	bf 05 25 40 00       	mov    $0x402505,%edi
  400ec5:	e8 46 10 00 00       	callq  401f10 <app_error>
  400eca:	48 8b 3d 4f 22 20 00 	mov    0x20224f(%rip),%rdi        # 603120 <stdout@@GLIBC_2.2.5>
  400ed1:	e8 ba fd ff ff       	callq  400c90 <fflush@plt>
  400ed6:	31 ff                	xor    %edi,%edi
  400ed8:	e8 03 fe ff ff       	callq  400ce0 <exit@plt>
  400edd:	0f 1f 00             	nopl   (%rax)

0000000000400ee0 <_start>:
  400ee0:	31 ed                	xor    %ebp,%ebp
  400ee2:	49 89 d1             	mov    %rdx,%r9
  400ee5:	5e                   	pop    %rsi
  400ee6:	48 89 e2             	mov    %rsp,%rdx
  400ee9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400eed:	50                   	push   %rax
  400eee:	54                   	push   %rsp
  400eef:	49 c7 c0 30 20 40 00 	mov    $0x402030,%r8
  400ef6:	48 c7 c1 c0 1f 40 00 	mov    $0x401fc0,%rcx
  400efd:	48 c7 c7 60 0d 40 00 	mov    $0x400d60,%rdi
  400f04:	e8 07 fd ff ff       	callq  400c10 <__libc_start_main@plt>
  400f09:	f4                   	hlt    
  400f0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400f10 <deregister_tm_clones>:
  400f10:	b8 27 31 60 00       	mov    $0x603127,%eax
  400f15:	55                   	push   %rbp
  400f16:	48 2d 20 31 60 00    	sub    $0x603120,%rax
  400f1c:	48 83 f8 0e          	cmp    $0xe,%rax
  400f20:	48 89 e5             	mov    %rsp,%rbp
  400f23:	76 1b                	jbe    400f40 <deregister_tm_clones+0x30>
  400f25:	b8 00 00 00 00       	mov    $0x0,%eax
  400f2a:	48 85 c0             	test   %rax,%rax
  400f2d:	74 11                	je     400f40 <deregister_tm_clones+0x30>
  400f2f:	5d                   	pop    %rbp
  400f30:	bf 20 31 60 00       	mov    $0x603120,%edi
  400f35:	ff e0                	jmpq   *%rax
  400f37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400f3e:	00 00 
  400f40:	5d                   	pop    %rbp
  400f41:	c3                   	retq   
  400f42:	0f 1f 40 00          	nopl   0x0(%rax)
  400f46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400f4d:	00 00 00 

0000000000400f50 <register_tm_clones>:
  400f50:	be 20 31 60 00       	mov    $0x603120,%esi
  400f55:	55                   	push   %rbp
  400f56:	48 81 ee 20 31 60 00 	sub    $0x603120,%rsi
  400f5d:	48 c1 fe 03          	sar    $0x3,%rsi
  400f61:	48 89 e5             	mov    %rsp,%rbp
  400f64:	48 89 f0             	mov    %rsi,%rax
  400f67:	48 c1 e8 3f          	shr    $0x3f,%rax
  400f6b:	48 01 c6             	add    %rax,%rsi
  400f6e:	48 d1 fe             	sar    %rsi
  400f71:	74 15                	je     400f88 <register_tm_clones+0x38>
  400f73:	b8 00 00 00 00       	mov    $0x0,%eax
  400f78:	48 85 c0             	test   %rax,%rax
  400f7b:	74 0b                	je     400f88 <register_tm_clones+0x38>
  400f7d:	5d                   	pop    %rbp
  400f7e:	bf 20 31 60 00       	mov    $0x603120,%edi
  400f83:	ff e0                	jmpq   *%rax
  400f85:	0f 1f 00             	nopl   (%rax)
  400f88:	5d                   	pop    %rbp
  400f89:	c3                   	retq   
  400f8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400f90 <__do_global_dtors_aux>:
  400f90:	80 3d a9 21 20 00 00 	cmpb   $0x0,0x2021a9(%rip)        # 603140 <completed.7594>
  400f97:	75 11                	jne    400faa <__do_global_dtors_aux+0x1a>
  400f99:	55                   	push   %rbp
  400f9a:	48 89 e5             	mov    %rsp,%rbp
  400f9d:	e8 6e ff ff ff       	callq  400f10 <deregister_tm_clones>
  400fa2:	5d                   	pop    %rbp
  400fa3:	c6 05 96 21 20 00 01 	movb   $0x1,0x202196(%rip)        # 603140 <completed.7594>
  400faa:	f3 c3                	repz retq 
  400fac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400fb0 <frame_dummy>:
  400fb0:	bf 20 2e 60 00       	mov    $0x602e20,%edi
  400fb5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400fb9:	75 05                	jne    400fc0 <frame_dummy+0x10>
  400fbb:	eb 93                	jmp    400f50 <register_tm_clones>
  400fbd:	0f 1f 00             	nopl   (%rax)
  400fc0:	b8 00 00 00 00       	mov    $0x0,%eax
  400fc5:	48 85 c0             	test   %rax,%rax
  400fc8:	74 f1                	je     400fbb <frame_dummy+0xb>
  400fca:	55                   	push   %rbp
  400fcb:	48 89 e5             	mov    %rsp,%rbp
  400fce:	ff d0                	callq  *%rax
  400fd0:	5d                   	pop    %rbp
  400fd1:	e9 7a ff ff ff       	jmpq   400f50 <register_tm_clones>
  400fd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400fdd:	00 00 00 

0000000000400fe0 <sigquit_handler>:
  400fe0:	bf 48 20 40 00       	mov    $0x402048,%edi
  400fe5:	48 83 ec 08          	sub    $0x8,%rsp
  400fe9:	e8 c2 fb ff ff       	callq  400bb0 <puts@plt>
  400fee:	bf 01 00 00 00       	mov    $0x1,%edi
  400ff3:	e8 e8 fc ff ff       	callq  400ce0 <exit@plt>
  400ff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400fff:	00 

0000000000401000 <parseline>:
  401000:	41 56                	push   %r14
  401002:	41 55                	push   %r13
  401004:	ba 00 04 00 00       	mov    $0x400,%edx
  401009:	41 54                	push   %r12
  40100b:	55                   	push   %rbp
  40100c:	49 89 f5             	mov    %rsi,%r13
  40100f:	53                   	push   %rbx
  401010:	48 89 fe             	mov    %rdi,%rsi
  401013:	bf 80 31 60 00       	mov    $0x603180,%edi
  401018:	bb 80 31 60 00       	mov    $0x603180,%ebx
  40101d:	e8 5e fc ff ff       	callq  400c80 <__stpcpy_chk@plt>
  401022:	48 2d 80 31 60 00    	sub    $0x603180,%rax
  401028:	c6 80 7f 31 60 00 20 	movb   $0x20,0x60317f(%rax)
  40102f:	0f b6 05 4a 21 20 00 	movzbl 0x20214a(%rip),%eax        # 603180 <array.4893>
  401036:	3c 20                	cmp    $0x20,%al
  401038:	75 11                	jne    40104b <parseline+0x4b>
  40103a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401040:	48 83 c3 01          	add    $0x1,%rbx
  401044:	0f b6 03             	movzbl (%rbx),%eax
  401047:	3c 20                	cmp    $0x20,%al
  401049:	74 f5                	je     401040 <parseline+0x40>
  40104b:	3c 27                	cmp    $0x27,%al
  40104d:	0f 84 a0 00 00 00    	je     4010f3 <parseline+0xf3>
  401053:	be 20 00 00 00       	mov    $0x20,%esi
  401058:	48 89 df             	mov    %rbx,%rdi
  40105b:	31 ed                	xor    %ebp,%ebp
  40105d:	e8 9e fb ff ff       	callq  400c00 <strchr@plt>
  401062:	48 85 c0             	test   %rax,%rax
  401065:	4d 89 ee             	mov    %r13,%r14
  401068:	0f 84 a4 00 00 00    	je     401112 <parseline+0x112>
  40106e:	66 90                	xchg   %ax,%ax
  401070:	49 89 1e             	mov    %rbx,(%r14)
  401073:	c6 00 00             	movb   $0x0,(%rax)
  401076:	48 8d 58 01          	lea    0x1(%rax),%rbx
  40107a:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  40107e:	83 c5 01             	add    $0x1,%ebp
  401081:	4d 89 f4             	mov    %r14,%r12
  401084:	3c 20                	cmp    $0x20,%al
  401086:	75 13                	jne    40109b <parseline+0x9b>
  401088:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40108f:	00 
  401090:	48 83 c3 01          	add    $0x1,%rbx
  401094:	0f b6 03             	movzbl (%rbx),%eax
  401097:	3c 20                	cmp    $0x20,%al
  401099:	74 f5                	je     401090 <parseline+0x90>
  40109b:	3c 27                	cmp    $0x27,%al
  40109d:	74 41                	je     4010e0 <parseline+0xe0>
  40109f:	be 20 00 00 00       	mov    $0x20,%esi
  4010a4:	48 89 df             	mov    %rbx,%rdi
  4010a7:	e8 54 fb ff ff       	callq  400c00 <strchr@plt>
  4010ac:	49 83 c6 08          	add    $0x8,%r14
  4010b0:	48 85 c0             	test   %rax,%rax
  4010b3:	75 bb                	jne    401070 <parseline+0x70>
  4010b5:	48 63 ed             	movslq %ebp,%rbp
  4010b8:	49 8b 44 ed f8       	mov    -0x8(%r13,%rbp,8),%rax
  4010bd:	49 c7 44 ed 00 00 00 	movq   $0x0,0x0(%r13,%rbp,8)
  4010c4:	00 00 
  4010c6:	0f b6 10             	movzbl (%rax),%edx
  4010c9:	31 c0                	xor    %eax,%eax
  4010cb:	80 fa 26             	cmp    $0x26,%dl
  4010ce:	0f 94 c0             	sete   %al
  4010d1:	74 55                	je     401128 <parseline+0x128>
  4010d3:	5b                   	pop    %rbx
  4010d4:	5d                   	pop    %rbp
  4010d5:	41 5c                	pop    %r12
  4010d7:	41 5d                	pop    %r13
  4010d9:	41 5e                	pop    %r14
  4010db:	c3                   	retq   
  4010dc:	0f 1f 40 00          	nopl   0x0(%rax)
  4010e0:	48 83 c3 01          	add    $0x1,%rbx
  4010e4:	be 27 00 00 00       	mov    $0x27,%esi
  4010e9:	48 89 df             	mov    %rbx,%rdi
  4010ec:	e8 0f fb ff ff       	callq  400c00 <strchr@plt>
  4010f1:	eb b9                	jmp    4010ac <parseline+0xac>
  4010f3:	48 83 c3 01          	add    $0x1,%rbx
  4010f7:	be 27 00 00 00       	mov    $0x27,%esi
  4010fc:	31 ed                	xor    %ebp,%ebp
  4010fe:	48 89 df             	mov    %rbx,%rdi
  401101:	4d 89 ee             	mov    %r13,%r14
  401104:	e8 f7 fa ff ff       	callq  400c00 <strchr@plt>
  401109:	48 85 c0             	test   %rax,%rax
  40110c:	0f 85 5e ff ff ff    	jne    401070 <parseline+0x70>
  401112:	5b                   	pop    %rbx
  401113:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
  40111a:	00 
  40111b:	b8 01 00 00 00       	mov    $0x1,%eax
  401120:	5d                   	pop    %rbp
  401121:	41 5c                	pop    %r12
  401123:	41 5d                	pop    %r13
  401125:	41 5e                	pop    %r14
  401127:	c3                   	retq   
  401128:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
  40112f:	00 
  401130:	5b                   	pop    %rbx
  401131:	5d                   	pop    %rbp
  401132:	41 5c                	pop    %r12
  401134:	41 5d                	pop    %r13
  401136:	41 5e                	pop    %r14
  401138:	c3                   	retq   
  401139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401140 <waitfg>:
  401140:	85 ff                	test   %edi,%edi
  401142:	7e 26                	jle    40116a <waitfg+0x2a>

  401144:	55                   	push   %rbp
  401145:	53                   	push   %rbx
  401146:	bb 80 39 60 00       	mov    $0x603980,%ebx //603980: jobs
  40114b:	48 83 ec 08          	sub    $0x8,%rsp
  40114f:	90                   	nop
				// for문의 시작
  401150:	3b 3b                	cmp    (%rbx),%edi // edi = pid 
  401152:	74 1c                	je     401170 <waitfg+0x30>
  401154:	48 81 c3 0c 04 00 00 	add    $0x40c,%rbx // jobs에다 40c를 더함 : 포인터 1 증가
  40115b:	48 81 fb 40 7a 60 00 	cmp    $0x607a40,%rbx // 마지막인지 비교
  401162:	75 ec                	jne    401150 <waitfg+0x10> // 마지막이 아니면 401150으로

  401164:	48 83 c4 08          	add    $0x8,%rsp
  401168:	5b                   	pop    %rbx
  401169:	5d                   	pop    %rbp
  40116a:	f3 c3                	repz retq 

  40116c:	0f 1f 40 00          	nopl   0x0(%rax)

  401170:	89 fd                	mov    %edi,%ebp

  401172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

  401178:	83 7b 08 01          	cmpl   $0x1,0x8(%rbx)  // state 가 FG라면
  40117c:	75 0e                	jne    40118c <waitfg+0x4c> // break
  40117e:	bf 01 00 00 00       	mov    $0x1,%edi
  401183:	e8 88 fb ff ff       	callq  400d10 <sleep@plt>
  401188:	3b 2b                	cmp    (%rbx),%ebp
  40118a:	74 ec                	je     401178 <waitfg+0x38>

  40118c:	8b 05 ce 1f 20 00    	mov    0x201fce(%rip),%eax        # 603160 <verbose>
  401192:	85 c0                	test   %eax,%eax
  401194:	74 ce                	je     401164 <waitfg+0x24>
  401196:	48 83 c4 08          	add    $0x8,%rsp
  40119a:	89 ea                	mov    %ebp,%edx
  40119c:	be 78 20 40 00       	mov    $0x402078,%esi
  4011a1:	5b                   	pop    %rbx
  4011a2:	5d                   	pop    %rbp
  4011a3:	bf 01 00 00 00       	mov    $0x1,%edi
  4011a8:	31 c0                	xor    %eax,%eax
  4011aa:	e9 f1 fa ff ff       	jmpq   400ca0 <__printf_chk@plt>
  4011af:	90                   	nop

00000000004011b0 <clearjob>:
  4011b0:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  4011b6:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
  4011bd:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  4011c4:	c6 47 0c 00          	movb   $0x0,0xc(%rdi)
  4011c8:	c3                   	retq   
  4011c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004011d0 <initjobs>:
  4011d0:	48 8d 87 c0 40 00 00 	lea    0x40c0(%rdi),%rax
  4011d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4011de:	00 00 
  4011e0:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  4011e6:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
  4011ed:	48 81 c7 0c 04 00 00 	add    $0x40c,%rdi
  4011f4:	c7 87 fc fb ff ff 00 	movl   $0x0,-0x404(%rdi)
  4011fb:	00 00 00 
  4011fe:	c6 87 00 fc ff ff 00 	movb   $0x0,-0x400(%rdi)
  401205:	48 39 c7             	cmp    %rax,%rdi
  401208:	75 d6                	jne    4011e0 <initjobs+0x10>
  40120a:	f3 c3                	repz retq 
  40120c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401210 <maxjid>:
  401210:	48 8d 57 04          	lea    0x4(%rdi),%rdx
  401214:	31 c0                	xor    %eax,%eax
  401216:	48 81 c7 c4 40 00 00 	add    $0x40c4,%rdi
  40121d:	0f 1f 00             	nopl   (%rax)
  401220:	8b 0a                	mov    (%rdx),%ecx
  401222:	39 c8                	cmp    %ecx,%eax
  401224:	0f 4c c1             	cmovl  %ecx,%eax
  401227:	48 81 c2 0c 04 00 00 	add    $0x40c,%rdx
  40122e:	48 39 fa             	cmp    %rdi,%rdx
  401231:	75 ed                	jne    401220 <maxjid+0x10>
  401233:	f3 c3                	repz retq 
  401235:	90                   	nop
  401236:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40123d:	00 00 00 

0000000000401240 <addjob>:
  401240:	85 f6                	test   %esi,%esi
  401242:	41 54                	push   %r12
  401244:	55                   	push   %rbp
  401245:	53                   	push   %rbx
  401246:	0f 8e 9c 00 00 00    	jle    4012e8 <addjob+0xa8>
  40124c:	48 8d 87 c0 40 00 00 	lea    0x40c0(%rdi),%rax
  401253:	89 f3                	mov    %esi,%ebx
  401255:	0f 1f 00             	nopl   (%rax)
  401258:	8b 37                	mov    (%rdi),%esi
  40125a:	85 f6                	test   %esi,%esi
  40125c:	74 22                	je     401280 <addjob+0x40>
  40125e:	48 81 c7 0c 04 00 00 	add    $0x40c,%rdi
  401265:	48 39 c7             	cmp    %rax,%rdi
  401268:	75 ee                	jne    401258 <addjob+0x18>
  40126a:	bf a6 22 40 00       	mov    $0x4022a6,%edi
  40126f:	31 ed                	xor    %ebp,%ebp
  401271:	e8 3a f9 ff ff       	callq  400bb0 <puts@plt>
  401276:	89 e8                	mov    %ebp,%eax
  401278:	5b                   	pop    %rbx
  401279:	5d                   	pop    %rbp
  40127a:	41 5c                	pop    %r12
  40127c:	c3                   	retq   
  40127d:	0f 1f 00             	nopl   (%rax)
  401280:	44 8b 25 89 1e 20 00 	mov    0x201e89(%rip),%r12d        # 603110 <nextjid>
  401287:	89 1f                	mov    %ebx,(%rdi)
  401289:	89 57 08             	mov    %edx,0x8(%rdi)
  40128c:	41 8d 44 24 01       	lea    0x1(%r12),%eax
  401291:	44 89 67 04          	mov    %r12d,0x4(%rdi)
  401295:	83 f8 10             	cmp    $0x10,%eax
  401298:	89 05 72 1e 20 00    	mov    %eax,0x201e72(%rip)        # 603110 <nextjid>
  40129e:	7e 0a                	jle    4012aa <addjob+0x6a>
  4012a0:	c7 05 66 1e 20 00 01 	movl   $0x1,0x201e66(%rip)        # 603110 <nextjid>
  4012a7:	00 00 00 
  4012aa:	4c 8d 47 0c          	lea    0xc(%rdi),%r8
  4012ae:	48 89 ce             	mov    %rcx,%rsi
  4012b1:	bd 01 00 00 00       	mov    $0x1,%ebp
  4012b6:	4c 89 c7             	mov    %r8,%rdi
  4012b9:	e8 e2 f8 ff ff       	callq  400ba0 <strcpy@plt>
  4012be:	49 89 c0             	mov    %rax,%r8
  4012c1:	8b 05 99 1e 20 00    	mov    0x201e99(%rip),%eax        # 603160 <verbose>
  4012c7:	85 c0                	test   %eax,%eax
  4012c9:	74 ab                	je     401276 <addjob+0x36>
  4012cb:	89 d9                	mov    %ebx,%ecx
  4012cd:	44 89 e2             	mov    %r12d,%edx
  4012d0:	be 90 22 40 00       	mov    $0x402290,%esi
  4012d5:	bf 01 00 00 00       	mov    $0x1,%edi
  4012da:	31 c0                	xor    %eax,%eax
  4012dc:	e8 bf f9 ff ff       	callq  400ca0 <__printf_chk@plt>
  4012e1:	eb 93                	jmp    401276 <addjob+0x36>
  4012e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4012e8:	31 ed                	xor    %ebp,%ebp
  4012ea:	89 e8                	mov    %ebp,%eax
  4012ec:	5b                   	pop    %rbx
  4012ed:	5d                   	pop    %rbp
  4012ee:	41 5c                	pop    %r12
  4012f0:	c3                   	retq   
  4012f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4012f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4012fd:	00 00 00 

0000000000401300 <deletejob>:
  401300:	85 f6                	test   %esi,%esi
  401302:	7e 1b                	jle    40131f <deletejob+0x1f>
  401304:	48 8d 97 c0 40 00 00 	lea    0x40c0(%rdi),%rdx
  40130b:	48 89 f8             	mov    %rdi,%rax
  40130e:	66 90                	xchg   %ax,%ax
  401310:	3b 30                	cmp    (%rax),%esi
  401312:	74 14                	je     401328 <deletejob+0x28>
  401314:	48 05 0c 04 00 00    	add    $0x40c,%rax
  40131a:	48 39 d0             	cmp    %rdx,%rax
  40131d:	75 f1                	jne    401310 <deletejob+0x10>
  40131f:	31 c0                	xor    %eax,%eax
  401321:	c3                   	retq   
  401322:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401328:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  40132e:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
  401335:	31 d2                	xor    %edx,%edx
  401337:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
  40133e:	c6 40 0c 00          	movb   $0x0,0xc(%rax)
  401342:	48 8d 47 04          	lea    0x4(%rdi),%rax
  401346:	48 81 c7 c4 40 00 00 	add    $0x40c4,%rdi
  40134d:	0f 1f 00             	nopl   (%rax)
  401350:	8b 08                	mov    (%rax),%ecx
  401352:	39 ca                	cmp    %ecx,%edx
  401354:	0f 4c d1             	cmovl  %ecx,%edx
  401357:	48 05 0c 04 00 00    	add    $0x40c,%rax
  40135d:	48 39 f8             	cmp    %rdi,%rax
  401360:	75 ee                	jne    401350 <deletejob+0x50>
  401362:	83 c2 01             	add    $0x1,%edx
  401365:	b8 01 00 00 00       	mov    $0x1,%eax
  40136a:	89 15 a0 1d 20 00    	mov    %edx,0x201da0(%rip)        # 603110 <nextjid>
  401370:	c3                   	retq   
  401371:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40137d:	00 00 00 

0000000000401380 <fgpid>:
  401380:	48 8d 87 c0 40 00 00 	lea    0x40c0(%rdi),%rax
  401387:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40138e:	00 00 
  401390:	83 7f 08 01          	cmpl   $0x1,0x8(%rdi)
  401394:	74 12                	je     4013a8 <fgpid+0x28>
  401396:	48 81 c7 0c 04 00 00 	add    $0x40c,%rdi
  40139d:	48 39 c7             	cmp    %rax,%rdi
  4013a0:	75 ee                	jne    401390 <fgpid+0x10>
  4013a2:	31 c0                	xor    %eax,%eax
  4013a4:	c3                   	retq   
  4013a5:	0f 1f 00             	nopl   (%rax)
  4013a8:	8b 07                	mov    (%rdi),%eax
  4013aa:	c3                   	retq   
  4013ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004013b0 <getjobpid>:
  4013b0:	85 f6                	test   %esi,%esi
  4013b2:	7e 1b                	jle    4013cf <getjobpid+0x1f>
  4013b4:	48 8d 97 c0 40 00 00 	lea    0x40c0(%rdi),%rdx
  4013bb:	48 89 f8             	mov    %rdi,%rax
  4013be:	66 90                	xchg   %ax,%ax
  4013c0:	3b 30                	cmp    (%rax),%esi
  4013c2:	74 0d                	je     4013d1 <getjobpid+0x21>
  4013c4:	48 05 0c 04 00 00    	add    $0x40c,%rax
  4013ca:	48 39 d0             	cmp    %rdx,%rax
  4013cd:	75 f1                	jne    4013c0 <getjobpid+0x10>
  4013cf:	31 c0                	xor    %eax,%eax
  4013d1:	f3 c3                	repz retq 
  4013d3:	0f 1f 00             	nopl   (%rax)
  4013d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4013dd:	00 00 00 

00000000004013e0 <getjobjid>:
  4013e0:	85 f6                	test   %esi,%esi
  4013e2:	7e 1c                	jle    401400 <getjobjid+0x20>
  4013e4:	48 8d 97 c0 40 00 00 	lea    0x40c0(%rdi),%rdx
  4013eb:	48 89 f8             	mov    %rdi,%rax
  4013ee:	66 90                	xchg   %ax,%ax
  4013f0:	3b 70 04             	cmp    0x4(%rax),%esi
  4013f3:	74 0d                	je     401402 <getjobjid+0x22>
  4013f5:	48 05 0c 04 00 00    	add    $0x40c,%rax
  4013fb:	48 39 d0             	cmp    %rdx,%rax
  4013fe:	75 f0                	jne    4013f0 <getjobjid+0x10>
  401400:	31 c0                	xor    %eax,%eax
  401402:	f3 c3                	repz retq 
  401404:	66 90                	xchg   %ax,%ax
  401406:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40140d:	00 00 00 

0000000000401410 <pid2jid>:
  401410:	85 ff                	test   %edi,%edi
  401412:	7e 1f                	jle    401433 <pid2jid+0x23>
  401414:	ba 80 39 60 00       	mov    $0x603980,%edx
  401419:	31 c0                	xor    %eax,%eax
  40141b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401420:	3b 3a                	cmp    (%rdx),%edi
  401422:	74 1c                	je     401440 <pid2jid+0x30>
  401424:	83 c0 01             	add    $0x1,%eax
  401427:	48 81 c2 0c 04 00 00 	add    $0x40c,%rdx
  40142e:	83 f8 10             	cmp    $0x10,%eax
  401431:	75 ed                	jne    401420 <pid2jid+0x10>
  401433:	31 c0                	xor    %eax,%eax
  401435:	c3                   	retq   
  401436:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40143d:	00 00 00 
  401440:	48 98                	cltq   
  401442:	48 69 c0 0c 04 00 00 	imul   $0x40c,%rax,%rax
  401449:	8b 80 84 39 60 00    	mov    0x603984(%rax),%eax
  40144f:	c3                   	retq   

0000000000401450 <listjobs>:
  401450:	55                   	push   %rbp
  401451:	53                   	push   %rbx
  401452:	31 ed                	xor    %ebp,%ebp
  401454:	48 8d 5f 0c          	lea    0xc(%rdi),%rbx
  401458:	48 83 ec 08          	sub    $0x8,%rsp
  40145c:	eb 11                	jmp    40146f <listjobs+0x1f>
  40145e:	66 90                	xchg   %ax,%ax
  401460:	83 c5 01             	add    $0x1,%ebp
  401463:	48 81 c3 0c 04 00 00 	add    $0x40c,%rbx
  40146a:	83 fd 10             	cmp    $0x10,%ebp
  40146d:	74 63                	je     4014d2 <listjobs+0x82>
  40146f:	8b 4b f4             	mov    -0xc(%rbx),%ecx
  401472:	85 c9                	test   %ecx,%ecx
  401474:	74 ea                	je     401460 <listjobs+0x10>
  401476:	8b 53 f8             	mov    -0x8(%rbx),%edx
  401479:	31 c0                	xor    %eax,%eax
  40147b:	be c4 22 40 00       	mov    $0x4022c4,%esi
  401480:	bf 01 00 00 00       	mov    $0x1,%edi
  401485:	e8 16 f8 ff ff       	callq  400ca0 <__printf_chk@plt>
  40148a:	8b 4b fc             	mov    -0x4(%rbx),%ecx
  40148d:	83 f9 02             	cmp    $0x2,%ecx
  401490:	74 4e                	je     4014e0 <listjobs+0x90>
  401492:	83 f9 03             	cmp    $0x3,%ecx
  401495:	74 79                	je     401510 <listjobs+0xc0>
  401497:	83 f9 01             	cmp    $0x1,%ecx
  40149a:	74 5c                	je     4014f8 <listjobs+0xa8>
  40149c:	89 ea                	mov    %ebp,%edx
  40149e:	be a8 20 40 00       	mov    $0x4020a8,%esi
  4014a3:	bf 01 00 00 00       	mov    $0x1,%edi
  4014a8:	31 c0                	xor    %eax,%eax
  4014aa:	e8 f1 f7 ff ff       	callq  400ca0 <__printf_chk@plt>
  4014af:	48 89 da             	mov    %rbx,%rdx
  4014b2:	31 c0                	xor    %eax,%eax
  4014b4:	be 3e 23 40 00       	mov    $0x40233e,%esi
  4014b9:	bf 01 00 00 00       	mov    $0x1,%edi
  4014be:	83 c5 01             	add    $0x1,%ebp
  4014c1:	48 81 c3 0c 04 00 00 	add    $0x40c,%rbx
  4014c8:	e8 d3 f7 ff ff       	callq  400ca0 <__printf_chk@plt>
  4014cd:	83 fd 10             	cmp    $0x10,%ebp
  4014d0:	75 9d                	jne    40146f <listjobs+0x1f>
  4014d2:	48 83 c4 08          	add    $0x8,%rsp
  4014d6:	5b                   	pop    %rbx
  4014d7:	5d                   	pop    %rbp
  4014d8:	c3                   	retq   
  4014d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4014e0:	be cf 22 40 00       	mov    $0x4022cf,%esi
  4014e5:	bf 01 00 00 00       	mov    $0x1,%edi
  4014ea:	31 c0                	xor    %eax,%eax
  4014ec:	e8 af f7 ff ff       	callq  400ca0 <__printf_chk@plt>
  4014f1:	eb bc                	jmp    4014af <listjobs+0x5f>
  4014f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4014f8:	be d8 22 40 00       	mov    $0x4022d8,%esi
  4014fd:	bf 01 00 00 00       	mov    $0x1,%edi
  401502:	31 c0                	xor    %eax,%eax
  401504:	e8 97 f7 ff ff       	callq  400ca0 <__printf_chk@plt>
  401509:	eb a4                	jmp    4014af <listjobs+0x5f>
  40150b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401510:	be e4 22 40 00       	mov    $0x4022e4,%esi
  401515:	bf 01 00 00 00       	mov    $0x1,%edi
  40151a:	31 c0                	xor    %eax,%eax
  40151c:	e8 7f f7 ff ff       	callq  400ca0 <__printf_chk@plt>
  401521:	eb 8c                	jmp    4014af <listjobs+0x5f>
  401523:	0f 1f 00             	nopl   (%rax)
  401526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40152d:	00 00 00 

0000000000401530 <usage>:
  401530:	48 83 ec 08          	sub    $0x8,%rsp
  401534:	bf ed 22 40 00       	mov    $0x4022ed,%edi
  401539:	e8 72 f6 ff ff       	callq  400bb0 <puts@plt>
  40153e:	bf 01 23 40 00       	mov    $0x402301,%edi
  401543:	e8 68 f6 ff ff       	callq  400bb0 <puts@plt>
  401548:	bf d8 20 40 00       	mov    $0x4020d8,%edi
  40154d:	e8 5e f6 ff ff       	callq  400bb0 <puts@plt>
  401552:	bf 08 21 40 00       	mov    $0x402108,%edi
  401557:	e8 54 f6 ff ff       	callq  400bb0 <puts@plt>
  40155c:	bf 01 00 00 00       	mov    $0x1,%edi
  401561:	e8 7a f7 ff ff       	callq  400ce0 <exit@plt>
  401566:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40156d:	00 00 00 

0000000000401570 <unix_error>:
  401570:	53                   	push   %rbx
  401571:	48 89 fb             	mov    %rdi,%rbx
  401574:	e8 17 f6 ff ff       	callq  400b90 <__errno_location@plt>
  401579:	8b 38                	mov    (%rax),%edi
  40157b:	e8 80 f7 ff ff       	callq  400d00 <strerror@plt>
  401580:	48 8b 3d 99 1b 20 00 	mov    0x201b99(%rip),%rdi        # 603120 <stdout@@GLIBC_2.2.5>
  401587:	49 89 c0             	mov    %rax,%r8
  40158a:	48 89 d9             	mov    %rbx,%rcx
  40158d:	ba 1c 23 40 00       	mov    $0x40231c,%edx
  401592:	be 01 00 00 00       	mov    $0x1,%esi
  401597:	31 c0                	xor    %eax,%eax
  401599:	e8 52 f7 ff ff       	callq  400cf0 <__fprintf_chk@plt>
  40159e:	bf 01 00 00 00       	mov    $0x1,%edi
  4015a3:	e8 38 f7 ff ff       	callq  400ce0 <exit@plt>
  4015a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4015af:	00 

00000000004015b0 <do_bgfg>:
  4015b0:	55                   	push   %rbp
  4015b1:	53                   	push   %rbx
  4015b2:	48 83 ec 08          	sub    $0x8,%rsp
  4015b6:	48 8b 5f 08          	mov    0x8(%rdi),%rbx	//argv[1]
  4015ba:	48 85 db             	test   %rbx,%rbx		// ==NULL
  4015bd:	0f 84 75 01 00 00    	je     401738 <do_bgfg+0x188> // 뭔가 출력하고 종료
  4015c3:	48 89 fd             	mov    %rdi,%rbp // rbp에 argv 저장
  4015c6:	e8 75 f7 ff ff       	callq  400d40 <__ctype_b_loc@plt>
  4015cb:	48 0f be 0b          	movsbq (%rbx),%rcx // argv[1]의 첫 글자를 rcx에 복사
  4015cf:	48 8b 00             	mov    (%rax),%rax // traits table포인터를 traits table로 복사
  4015d2:	f6 44 48 01 08       testb  $0x8,0x1(%rax,%rcx,2)
  4015d7:	75 67                	jne    401640 <do_bgfg+0x90> //다르면
  4015d9:	80 f9 25             	cmp    $0x25,%cl // % 글자라면
  4015dc:	74 22                	je     401600 <do_bgfg+0x50> // %글자일때오는곳으로간다.

//뭔가 아닌듯하다.
  4015de:	48 8b 55 00          	mov    0x0(%rbp),%rdx argv[0]을 rdx로
  4015e2:	be 60 21 40 00       	mov    $0x402160,%esi

//뭔가 출력하고 종료하는 곳이다. return값은 0
  4015e7:	48 83 c4 08          	add    $0x8,%rsp
  4015eb:	bf 01 00 00 00       	mov    $0x1,%edi
  4015f0:	31 c0                	xor    %eax,%eax
  4015f2:	5b                   	pop    %rbx
  4015f3:	5d                   	pop    %rbp
  4015f4:	e9 a7 f6 ff ff       	jmpq   400ca0 <__printf_chk@plt> // 뭔가 출력하고 종료

  4015f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

//% 글자일 때 오는 곳
  401600:	48 8d 7b 01          	lea    0x1(%rbx),%rdi // &argv[1][1]를 rdi로
  401604:	ba 0a 00 00 00       	mov    $0xa,%edx // edx에 0xa =10
  401609:	31 f6                	xor    %esi,%esi // esi = 0
  40160b:	e8 50 f6 ff ff       	callq  400c60 <strtol@plt> //str =  &argv[1][1], endp = 0, base = 10
  401610:	85 c0                	test   %eax,%eax // 리턴값이 0인가?
  401612:	89 c2                	mov    %eax,%edx // eax를 edx에 보존
  401614:	7e 1d                	jle    401633 <do_bgfg+0x83>// 0또는음수면 잘못됐다
  401616:	b8 80 39 60 00       	mov    $0x603980,%eax // eax에 jobs주소 저장
  40161b:	b9 40 7a 60 00       	mov    $0x607a40,%ecx // ecx에 _end 저장

//루프 : jid에 해당하는 job의 주소를 찾아서 rbx에 저장 : 결국에는 getjobjid
  401620:	3b 50 04             	cmp    0x4(%rax),%edx // jobs[0].jid를 edx 즉 리턴값과 비교
  401623:	48 89 c3             	mov    %rax,%rbx // rbx에 jobs의 주소를 넣는다
  401626:	74 68                	je     401690 <do_bgfg+0xe0> // 잘된건가?
  401628:	48 05 0c 04 00 00    	add    $0x40c,%rax // 포인터 증가
  40162e:	48 39 c1             	cmp    %rax,%rcx // rcx는 _end 즉 데이터세그먼트의 마지막
  401631:	75 ed                	jne    401620 <do_bgfg+0x70>

// 뭔가 잘못됐다
  401633:	48 8b 55 08          	mov    0x8(%rbp),%rdx // argv[1]을 rdx로
  401637:	be 80 23 40 00       	mov    $0x402380,%esi // esi에 메시지를
  40163c:	eb a9                	jmp    4015e7 <do_bgfg+0x37> // 뭔가 출력하고 종료
  40163e:	66 90                	xchg   %ax,%ax // NOP

//다를 때 가는 곳
  401640:	31 f6                	xor    %esi,%esi //esi =0
  401642:	ba 0a 00 00 00       	mov    $0xa,%edx //edx = 10 
  401647:	48 89 df             	mov    %rbx,%rdi // rdi = argv[1]
  40164a:	e8 11 f6 ff ff       	callq  400c60 <strtol@plt> // 
  40164f:	85 c0                	test   %eax,%eax 
  401651:	89 c6                	mov    %eax,%esi // esi에 인자
  401653:	7e 22                	jle    401677 <do_bgfg+0xc7> //오류
  401655:	b9 80 39 60 00       	mov    $0x603980,%ecx // ecx에 jobs
  40165a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

//getjobpid
  401660:	3b 31                	cmp    (%rcx),%esi // jobs의 pid와 pid가 같은가
  401662:	48 89 cb             	mov    %rcx,%rbx
  401665:	74 29                	je     401690 <do_bgfg+0xe0> // 잘된건가
  401667:	48 81 c1 0c 04 00 00 	add    $0x40c,%rcx
  40166e:	48 81 f9 40 7a 60 00 	cmp    $0x607a40,%rcx
  401675:	75 e9                	jne    401660 <do_bgfg+0xb0>
// 
  401677:	48 83 c4 08          	add    $0x8,%rsp
  40167b:	89 c2                	mov    %eax,%edx //esi에 인자를 
  40167d:	be 69 23 40 00       	mov    $0x402369,%esi // 문자열주소
  401682:	5b                   	pop    %rbx
  401683:	5d                   	pop    %rbp
  401684:	bf 01 00 00 00       	mov    $0x1,%edi
  401689:	31 c0                	xor    %eax,%eax
  40168b:	e9 10 f6 ff ff       	jmpq   400ca0 <__printf_chk@plt> // 뭔가 출력하고 종료 arguments must be 뭐시기

//잘 된건가?
  401690:	48 8b 45 00          	mov    0x0(%rbp),%rax // rax에 argv[0]
  401694:	0f b6 10             	movzbl (%rax),%edx // edx에 argv[0][0]
  401697:	83 fa 62             	cmp    $0x62,%edx // b
  40169a:	75 4c                	jne    4016e8 <do_bgfg+0x138> //fg 검사하러 간다
  40169c:	80 78 01 67          	cmpb   $0x67,0x1(%rax) //g
  4016a0:	75 51                	jne    4016f3 <do_bgfg+0x143> //둘다 틀렸다
  4016a2:	80 78 02 00          	cmpb   $0x0,0x2(%rax) // NULL
  4016a6:	75 4b                	jne    4016f3 <do_bgfg+0x143> // 둘다 틀렸다
  4016a8:	8b 3b                	mov    (%rbx),%edi // edi에 job의 pid를!
  4016aa:	be 12 00 00 00       	mov    $0x12,%esi //esi에 0x12를 (SIGCONT) 
  4016af:	f7 df                	neg    %edi //job의 pid의 마이너스를!
  4016b1:	e8 ba f5 ff ff       	callq  400c70 <kill@plt>
  4016b6:	85 c0                	test   %eax,%eax (리턴값이 0인지)
  4016b8:	0f 88 91 00 00 00    	js     40174f <do_bgfg+0x19f> //에러
  4016be:	c7 43 08 02 00 00 00 	movl   $0x2,0x8(%rbx) // 해당 job의 state에 BG
  4016c5:	8b 53 04             	mov    0x4(%rbx),%edx // 해당job의 jid를 edx에
  4016c8:	4c 8d 43 0c          	lea    0xc(%rbx),%r8 // job의 cmdline를 r8에
  4016cc:	8b 0b                	mov    (%rbx),%ecx // job의 pid를 ecx에 
  4016ce:	48 83 c4 08          	add    $0x8,%rsp
  4016d2:	be 34 23 40 00       	mov    $0x402334,%esi //esi에 어떤 문자열을
  4016d7:	5b                   	pop    %rbx
  4016d8:	5d                   	pop    %rbp
  4016d9:	bf 01 00 00 00       	mov    $0x1,%edi // _printf_chk
  4016de:	31 c0                	xor    %eax,%eax
  4016e0:	e9 bb f5 ff ff       	jmpq   400ca0 <__printf_chk@plt> // 출력하고 종료
  4016e5:	0f 1f 00             	nopl   (%rax)

// fg검사하는곳
  4016e8:	83 fa 66             	cmp    $0x66,%edx //f
  4016eb:	75 06                	jne    4016f3 <do_bgfg+0x143> //틀렸다
  4016ed:	80 78 01 67          	cmpb   $0x67,0x1(%rax) //g
  4016f1:	74 15                	je     401708 <do_bgfg+0x158> // fg로

//틀렸을떄
  4016f3:	bf 51 23 40 00       	mov    $0x402351,%edi
  4016f8:	e8 b3 f4 ff ff       	callq  400bb0 <puts@plt>  // 뭔가 화면에 출력하고
  4016fd:	31 ff                	xor    %edi,%edi
  4016ff:	e8 dc f5 ff ff       	callq  400ce0 <exit@plt> // exit(0)
  401704:	0f 1f 40 00          	nopl   0x0(%rax)

//fg
  401708:	80 78 02 00          	cmpb   $0x0,0x2(%rax) // 0으로 끝나는지 확인
  40170c:	75 e5                	jne    4016f3 <do_bgfg+0x143> //틀렸다!
  40170e:	8b 3b                	mov    (%rbx),%edi // pid를 edi에
  401710:	be 12 00 00 00       	mov    $0x12,%esi // esi에는 SIGCONT
  401715:	f7 df                	neg    %edi // -pid
  401717:	e8 54 f5 ff ff       	callq  400c70 <kill@plt> // kill
  40171c:	85 c0                	test   %eax,%eax // eax == 0
  40171e:	78 25                	js     401745 <do_bgfg+0x195> //오류
  401720:	c7 43 08 01 00 00 00 	movl   $0x1,0x8(%rbx) // job의 state에 FG
  401727:	8b 3b                	mov    (%rbx),%edi // edi에 pid
  401729:	48 83 c4 08          	add    $0x8,%rsp 
  40172d:	5b                   	pop    %rbx
  40172e:	5d                   	pop    %rbp
  40172f:	e9 0c fa ff ff       	jmpq   401140 <waitfg> 호출
  401734:	0f 1f 40 00          	nopl   0x0(%rax)

  401738:	48 8b 17             	mov    (%rdi),%rdx // rdx에 argv[0]를 넣는다
  40173b:	be 30 21 40 00       	mov    $0x402130,%esi // 402130 을 넣고
  401740:	e9 a2 fe ff ff       	jmpq   4015e7 <do_bgfg+0x37> //출력 후 종료

//kill error
  401745:	bf 41 23 40 00       	mov    $0x402341,%edi
  40174a:	e8 21 fe ff ff       	callq  401570 <unix_error>

  40174f:	bf 24 23 40 00       	mov    $0x402324,%edi
  401754:	e8 17 fe ff ff       	callq  401570 <unix_error>
  401759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401760 <builtin_cmd>:
  401760:	48 83 ec 08          	sub    $0x8,%rsp
  401764:	48 8b 07             	mov    (%rdi),%rax // argv[0]
  401767:	49 89 f8             	mov    %rdi,%r8 // r8 = argv
  40176a:	b9 05 00 00 00       	mov    $0x5,%ecx
  40176f:	bf 91 23 40 00       	mov    $0x402391,%edi
  401774:	48 89 c6             	mov    %rax,%rsi
  401777:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi) // quit인지
  401779:	0f 84 9d 00 00 00    	je     40181c <builtin_cmd+0xbc>

  40177f:	bf bf 22 40 00       	mov    $0x4022bf,%edi
  401784:	b9 05 00 00 00       	mov    $0x5,%ecx // jobs인지
  401789:	48 89 c6             	mov    %rax,%rsi
  40178c:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
  40178e:	74 78                	je     401808 <builtin_cmd+0xa8>

  401790:	0f b6 10             	movzbl (%rax),%edx // argv[0][0]
  401793:	83 fa 62             	cmp    $0x62,%edx // b인지
  401796:	74 30                	je     4017c8 <builtin_cmd+0x68>
  401798:	83 fa 66             	cmp    $0x66,%edx // f인지
  40179b:	75 53                	jne    4017f0 <builtin_cmd+0x90>
  40179d:	80 78 01 67          	cmpb   $0x67,0x1(%rax) // g인지
  4017a1:	75 0d                	jne    4017b0 <builtin_cmd+0x50>
  4017a3:	80 78 02 00          	cmpb   $0x0,0x2(%rax)
  4017a7:	74 2b                	je     4017d4 <builtin_cmd+0x74>
  4017a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4017b0:	ba c0 ff ff ff       	mov    $0xffffffc0,%edx

  4017b5:	31 c0                	xor    %eax,%eax
  4017b7:	85 d2                	test   %edx,%edx
  4017b9:	0f 94 c0             	sete   %al // edx가 0인지 아닌지
  4017bc:	48 83 c4 08          	add    $0x8,%rsp
  4017c0:	c3                   	retq   
  4017c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

  4017c8:	80 78 01 67          	cmpb   $0x67,0x1(%rax) //g인지
  4017cc:	75 22                	jne    4017f0 <builtin_cmd+0x90>
  4017ce:	80 78 02 00          	cmpb   $0x0,0x2(%rax)
  4017d2:	75 1c                	jne    4017f0 <builtin_cmd+0x90>
  4017d4:	4c 89 c7             	mov    %r8,%rdi
  4017d7:	e8 d4 fd ff ff       	callq  4015b0 <do_bgfg>
  4017dc:	b8 01 00 00 00       	mov    $0x1,%eax
  4017e1:	48 83 c4 08          	add    $0x8,%rsp
  4017e5:	c3                   	retq   
  4017e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4017ed:	00 00 00 

  4017f0:	b9 26 00 00 00       	mov    $0x26,%ecx // apersand &
  4017f5:	29 d1                	sub    %edx,%ecx // 0x26에서 argv[0][ last]에서 0x26 빼기
  4017f7:	89 ca                	mov    %ecx,%edx // edx = 0x26 - argv[0][last]
  4017f9:	75 ba                	jne    4017b5 <builtin_cmd+0x55> // 다르면
  4017fb:	0f b6 50 01          	movzbl 0x1(%rax),%edx //만약 &로 끝나면 argv[0][1]을 edx에
  4017ff:	f7 da                	neg    %edx // -argv[0][1]
  401801:	eb b2                	jmp    4017b5 <builtin_cmd+0x55>
  401803:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

  401808:	bf 80 39 60 00       	mov    $0x603980,%edi
  40180d:	e8 3e fc ff ff       	callq  401450 <listjobs>
  401812:	b8 01 00 00 00       	mov    $0x1,%eax
  401817:	48 83 c4 08          	add    $0x8,%rsp
  40181b:	c3                   	retq   

  40181c:	31 ff                	xor    %edi,%edi
  40181e:	e8 bd f4 ff ff       	callq  400ce0 <exit@plt>
  401823:	0f 1f 00             	nopl   (%rax)
  401826:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40182d:	00 00 00 

0000000000401830 <eval>:
  401830:	41 55                	push   %r13
  401832:	41 54                	push   %r12
  401834:	55                   	push   %rbp
  401835:	53                   	push   %rbx
  401836:	48 89 fd             	mov    %rdi,%rbp // rdi rbp는 cmdline
  401839:	48 81 ec 98 04 00 00 	sub    $0x498,%rsp
  401840:	48 8d b4 24 80 00 00 	lea    0x80(%rsp),%rsi // argv
  401847:	00 
  401848:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40184f:	00 00 
  401851:	48 89 84 24 88 04 00 	mov    %rax,0x488(%rsp)
  401858:	00 
  401859:	31 c0                	xor    %eax,%eax
  40185b:	e8 a0 f7 ff ff       	callq  401000 <parseline>
  401860:	48 83 bc 24 80 00 00 	cmpq   $0x0,0x80(%rsp)
  401867:	00 00 
  401869:	74 14                	je     40187f <eval+0x4f> //나간다.
  40186b:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
  401872:	00 
  401873:	41 89 c4             	mov    %eax,%r12d // r12d에 bg인지가 저장되어 있음
  401876:	e8 e5 fe ff ff       	callq  401760 <builtin_cmd>
  40187b:	85 c0                	test   %eax,%eax
  40187d:	74 29                	je     4018a8 <eval+0x78> // builtin_cmd가 0이면

//builtin_cmd = 1
// 나가는길
  40187f:	48 8b 84 24 88 04 00 	mov    0x488(%rsp),%rax
  401886:	00 
  401887:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  40188e:	00 00 
  401890:	0f 85 c1 01 00 00    	jne    401a57 <eval+0x227> // stack chk fail

  401896:	48 81 c4 98 04 00 00 	add    $0x498,%rsp
  40189d:	5b                   	pop    %rbx
  40189e:	5d                   	pop    %rbp
  40189f:	41 5c                	pop    %r12
  4018a1:	41 5d                	pop    %r13
  4018a3:	c3                   	retq   

  4018a4:	0f 1f 40 00          	nopl   0x0(%rax)

//builtin_cmd != 1
//r12d에 bg 저장
  4018a8:	48 89 e7             	mov    %rsp,%rdi
  4018ab:	e8 90 f3 ff ff       	callq  400c40 <sigemptyset@plt>
  4018b0:	85 c0                	test   %eax,%eax
  4018b2:	0f 88 a4 01 00 00    js     401a5c <eval+0x22c>

  4018b8:	be 11 00 00 00       mov    $0x11,%esi
  4018bd:	48 89 e7             	mov    %rsp,%rdi
  4018c0:	e8 5b f4 ff ff       	callq  400d20 <sigaddset@plt>
  4018c5:	85 c0                	test   %eax,%eax
  4018c7:	0f 85 80 01 00 00    	jne    401a4d <eval+0x21d>

  4018cd:	be 02 00 00 00       	mov    $0x2,%esi
  4018d2:	48 89 e7             	mov    %rsp,%rdi
  4018d5:	e8 46 f4 ff ff       	callq  400d20 <sigaddset@plt>
  4018da:	85 c0                	test   %eax,%eax
  4018dc:	0f 85 6b 01 00 00    	jne    401a4d <eval+0x21d>

  4018e2:	be 14 00 00 00       	mov    $0x14,%esi // sigtstp
  4018e7:	48 89 e7             	mov    %rsp,%rdi
  4018ea:	e8 31 f4 ff ff       	callq  400d20 <sigaddset@plt>
  4018ef:	85 c0                	test   %eax,%eax
  4018f1:	41 89 c5             	mov    %eax,%r13d // sigaddset의 리턴값을 r13d 에 저장
  4018f4:	0f 85 53 01 00 00    	jne    401a4d <eval+0x21d>

  4018fa:	31 d2                	xor    %edx,%edx //0
  4018fc:	31 ff                	xor    %edi,%edi //0 
  4018fe:	48 89 e6             	mov    %rsp,%rsi // &intsig.sa_mask
  401901:	e8 7a f2 ff ff       	callq  400b80 <sigprocmask@plt>
  401906:	85 c0                	test   %eax,%eax
  401908:	0f 88 58 01 00 00    	js     401a66 <eval+0x236>
  40190e:	e8 1d f4 ff ff       	callq  400d30 <fork@plt>
  401913:	85 c0                	test   %eax,%eax
  401915:	89 c3                	mov    %eax,%ebx // ebx = pid
  401917:	0f 88 53 01 00 00    	js     401a70 <eval+0x240> // unix_error : fork 실패
  40191d:	0f 84 85 00 00 00    	je     4019a8 <eval+0x178> // 0이면
//pid가 양수 또는 execve가 실패해서 ?????돌아왔다!!
  401923:	41 83 fc 01          	cmp    $0x1,%r12d //bg인가
  401927:	48 89 e9             	mov    %rbp,%rcx // rbp를 rcx에 (cmdline)
  40192a:	0f 84 e0 00 00 00    	je     401a10 <eval+0x1e0> // bg라면

//bg아님
  401930:	ba 01 00 00 00       	mov    $0x1,%edx
  401935:	89 de                	mov    %ebx,%esi
  401937:	bf 80 39 60 00       	mov    $0x603980,%edi // jobs
  40193c:	e8 ff f8 ff ff       	callq  401240 <addjob>
  401941:	31 d2                	xor    %edx,%edx
  401943:	48 89 e6             	mov    %rsp,%rsi
  401946:	bf 01 00 00 00       	mov    $0x1,%edi
  40194b:	e8 30 f2 ff ff       	callq  400b80 <sigprocmask@plt>
  401950:	45 85 e4             	test   %r12d,%r12d // bg인가
  401953:	74 43                	je     401998 <eval+0x168> //bg가 아니면 간다.
//bg인경우이다.
  401955:	85 db                	test   %ebx,%ebx //  pid가 0인지 검사
  401957:	74 1e                	je     401977 <eval+0x147> // pid가 0인경우로간다
// pid가 0이 아닌 경우
  401959:	ba 80 39 60 00       	mov    $0x603980,%edx // edx에 jobs 저장
  40195e:	31 c0                	xor    %eax,%eax

  401960:	3b 1a                	cmp    (%rdx),%ebx // jobs[0].pid가 ebx인가?
  401962:	0f 84 d0 00 00 00    	je     401a38 <eval+0x208>
  401968:	83 c0 01             	add    $0x1,%eax
  40196b:	48 81 c2 0c 04 00 00 	add    $0x40c,%rdx
  401972:	83 f8 10             	cmp    $0x10,%eax
  401975:	75 e9                	jne    401960 <eval+0x130>

// pid가 0인경우/ 아닌경우에도 옴 401a48
  401977:	49 89 e8             	mov    %rbp,%r8 // cmdline을 r8에 저장
  40197a:	89 d9                	mov    %ebx,%ecx // ecx에 pid 저장
  40197c:	44 89 ea             	mov    %r13d,%edx // 아까 sigaddset의 결과값(stp)
  40197f:	be 34 23 40 00       	mov    $0x402334,%esi // 문자열
  401984:	bf 01 00 00 00       	mov    $0x1,%edi // 
  401989:	31 c0                	xor    %eax,%eax
  40198b:	e8 10 f3 ff ff       	callq  400ca0 <__printf_chk@plt>
  401990:	e9 ea fe ff ff       	jmpq   40187f <eval+0x4f> //뭔가 출력하고 종료한다.
  401995:	0f 1f 00             	nopl   (%rax)
//bg가 아니면
  401998:	89 df                	mov    %ebx,%edi
  40199a:	e8 a1 f7 ff ff       	callq  401140 <waitfg>
  40199f:	e9 db fe ff ff       	jmpq   40187f <eval+0x4f>
  4019a4:	0f 1f 40 00          	nopl   0x0(%rax)

//fork 후 pid가 0인 경우
  4019a8:	31 d2                	xor    %edx,%edx
  4019aa:	48 89 e6             	mov    %rsp,%rsi
  4019ad:	bf 01 00 00 00       	mov    $0x1,%edi
  4019b2:	e8 c9 f1 ff ff       	callq  400b80 <sigprocmask@plt>
  4019b7:	31 f6                	xor    %esi,%esi
  4019b9:	31 ff                	xor    %edi,%edi
  4019bb:	e8 10 f3 ff ff       	callq  400cd0 <setpgid@plt>
  4019c0:	85 c0                	test   %eax,%eax
  4019c2:	0f 88 b2 00 00 00    	js     401a7a <eval+0x24a>  // 실패
  4019c8:	48 8b 15 69 17 20 00 	mov    0x201769(%rip),%rdx        # 603138 <__environ@@GLIBC_2.2.5>
  4019cf:	48 8b bc 24 80 00 00 	mov    0x80(%rsp),%rdi // rdi에 argv넣음
  4019d6:	00 
  4019d7:	48 8d b4 24 80 00 00 	lea    0x80(%rsp),%rsi
  4019de:	00 
  4019df:	e8 4c f2 ff ff       	callq  400c30 <execve@plt>
// should not reach here
  4019e4:	85 c0                	test   %eax,%eax
  4019e6:	0f 89 37 ff ff ff    	jns    401923 <eval+0xf3> //jump if 0 or positive 그럴리 없다!!!!
//negative 에러 출력후 종료
  4019ec:	48 8b 94 24 80 00 00 	mov    0x80(%rsp),%rdx //argv
  4019f3:	00 
  4019f4:	bf 01 00 00 00       	mov    $0x1,%edi // 1
  4019f9:	be e3 23 40 00       	mov    $0x4023e3,%esi //메시지
  4019fe:	31 c0                	xor    %eax,%eax
  401a00:	e8 9b f2 ff ff       	callq  400ca0 <__printf_chk@plt>
  401a05:	31 ff                	xor    %edi,%edi
  401a07:	e8 d4 f2 ff ff       	callq  400ce0 <exit@plt>
  401a0c:	0f 1f 40 00          	nopl   0x0(%rax)

//bg라면
  401a10:	89 de                	mov    %ebx,%esi // esi에 pid 담기
  401a12:	ba 02 00 00 00       	mov    $0x2,%edx // edx에 2 담기
  401a17:	bf 80 39 60 00       	mov    $0x603980,%edi // jobs
  401a1c:	e8 1f f8 ff ff       	callq  401240 <addjob>
  401a21:	31 d2                	xor    %edx,%edx
  401a23:	48 89 e6             	mov    %rsp,%rsi
  401a26:	bf 01 00 00 00       	mov    $0x1,%edi
  401a2b:	e8 50 f1 ff ff       	callq  400b80 <sigprocmask@plt>
  401a30:	e9 20 ff ff ff       	jmpq   401955 <eval+0x125>
  401a35:	0f 1f 00             	nopl   (%rax)
//job이 rdx에 담긴채로 도착
  401a38:	48 98                	cltq   
  401a3a:	48 69 c0 0c 04 00 00 	imul   $0x40c,%rax,%rax
  401a41:	44 8b a8 84 39 60 00 	mov    0x603984(%rax),%r13d
  401a48:	e9 2a ff ff ff       	jmpq   401977 <eval+0x147>

  401a4d:	bf a8 23 40 00       	mov    $0x4023a8,%edi
  401a52:	e8 19 fb ff ff       	callq  401570 <unix_error>
//스택체크에러
  401a57:	e8 84 f1 ff ff       	callq  400be0 <__stack_chk_fail@plt>
// sigemptyset 실패
  401a5c:	bf 96 23 40 00       	mov    $0x402396,%edi
  401a61:	e8 0a fb ff ff       	callq  401570 <unix_error>
  401a66:	bf b8 23 40 00       	mov    $0x4023b8,%edi
  401a6b:	e8 00 fb ff ff       	callq  401570 <unix_error>
  401a70:	bf ca 23 40 00       	mov    $0x4023ca,%edi
  401a75:	e8 f6 fa ff ff       	callq  401570 <unix_error>

  401a7a:	bf d5 23 40 00       	mov    $0x4023d5,%edi
  401a7f:	e8 ec fa ff ff       	callq  401570 <unix_error>
  401a84:	66 90                	xchg   %ax,%ax
  401a86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401a8d:	00 00 00 

0000000000401a90 <sigchld_handler>:
  401a90:	41 54                	push   %r12
  401a92:	55                   	push   %rbp
  401a93:	53                   	push   %rbx
  401a94:	48 83 ec 10          	sub    $0x10,%rsp
  401a98:	8b 3d c2 16 20 00    	mov    0x2016c2(%rip),%edi        # 603160 <verbose>
  401a9e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401aa5:	00 00 
  401aa7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401aac:	31 c0                	xor    %eax,%eax
  401aae:	85 ff                	test   %edi,%edi // verbose인지 아닌지
  401ab0:	0f 85 85 02 00 00    	jne    401d3b <sigchld_handler+0x2ab> // verbose라면 갔다와랏
  401ab6:	bd 40 7a 60 00       	mov    $0x607a40,%ebp // _end
  401abb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1) // 패딩
  401ac0:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi // rsi에 rsp+4 대입
  401ac5:	ba 03 00 00 00       	mov    $0x3,%edx // edx = 3 (NOHANG, UNTRACED)
  401aca:	bf ff ff ff ff       	mov    $0xffffffff,%edi // edi에 -1
  401acf:	e8 dc f1 ff ff       	callq  400cb0 <waitpid@plt>
  401ad4:	83 f8 00             	cmp    $0x0,%eax
  401ad7:	89 c3                	mov    %eax,%ebx
  401ad9:	0f 8e 2e 02 00 00    	jle    401d0d <sigchld_handler+0x27d>
  401adf:	8b 54 24 04          	mov    0x4(%rsp),%edx
  401ae3:	80 fa 7f             	cmp    $0x7f,%dl
  401ae6:	0f 84 84 00 00 00    	je     401b70 <sigchld_handler+0xe0>
  401aec:	89 d0                	mov    %edx,%eax
  401aee:	83 e0 7f             	and    $0x7f,%eax
  401af1:	83 c0 01             	add    $0x1,%eax
  401af4:	3c 01                	cmp    $0x1,%al
  401af6:	0f 8e 14 01 00 00    	jle    401c10 <sigchld_handler+0x180>
  401afc:	ba 80 39 60 00       	mov    $0x603980,%edx
  401b01:	31 c0                	xor    %eax,%eax
  401b03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401b08:	3b 1a                	cmp    (%rdx),%ebx
  401b0a:	0f 84 98 01 00 00    	je     401ca8 <sigchld_handler+0x218>
  401b10:	83 c0 01             	add    $0x1,%eax
  401b13:	48 81 c2 0c 04 00 00 	add    $0x40c,%rdx
  401b1a:	83 f8 10             	cmp    $0x10,%eax
  401b1d:	75 e9                	jne    401b08 <sigchld_handler+0x78>
  401b1f:	45 31 e4             	xor    %r12d,%r12d
  401b22:	89 de                	mov    %ebx,%esi
  401b24:	bf 80 39 60 00       	mov    $0x603980,%edi
  401b29:	e8 d2 f7 ff ff       	callq  401300 <deletejob>
  401b2e:	85 c0                	test   %eax,%eax
  401b30:	74 0e                	je     401b40 <sigchld_handler+0xb0>
  401b32:	8b 35 28 16 20 00    	mov    0x201628(%rip),%esi        # 603160 <verbose>
  401b38:	85 f6                	test   %esi,%esi
  401b3a:	0f 85 98 01 00 00    	jne    401cd8 <sigchld_handler+0x248>
  401b40:	44 8b 4c 24 04       	mov    0x4(%rsp),%r9d
  401b45:	48 8b 3d d4 15 20 00 	mov    0x2015d4(%rip),%rdi        # 603120 <stdout@@GLIBC_2.2.5>
  401b4c:	41 89 d8             	mov    %ebx,%r8d
  401b4f:	44 89 e1             	mov    %r12d,%ecx
  401b52:	ba d8 21 40 00       	mov    $0x4021d8,%edx
  401b57:	be 01 00 00 00       	mov    $0x1,%esi
  401b5c:	31 c0                	xor    %eax,%eax
  401b5e:	41 83 e1 7f          	and    $0x7f,%r9d
  401b62:	e8 89 f1 ff ff       	callq  400cf0 <__fprintf_chk@plt>
  401b67:	e9 54 ff ff ff       	jmpq   401ac0 <sigchld_handler+0x30>
  401b6c:	0f 1f 40 00          	nopl   0x0(%rax)
  401b70:	b9 80 39 60 00       	mov    $0x603980,%ecx
  401b75:	48 89 c8             	mov    %rcx,%rax
  401b78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401b7f:	00 
  401b80:	3b 18                	cmp    (%rax),%ebx
  401b82:	74 3c                	je     401bc0 <sigchld_handler+0x130>
  401b84:	48 05 0c 04 00 00    	add    $0x40c,%rax
  401b8a:	48 39 c5             	cmp    %rax,%rbp
  401b8d:	75 f1                	jne    401b80 <sigchld_handler+0xf0>
  401b8f:	89 da                	mov    %ebx,%edx
  401b91:	be 56 24 40 00       	mov    $0x402456,%esi
  401b96:	bf 01 00 00 00       	mov    $0x1,%edi
  401b9b:	31 c0                	xor    %eax,%eax
  401b9d:	e8 fe f0 ff ff       	callq  400ca0 <__printf_chk@plt>
  401ba2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  401ba7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  401bae:	00 00 
  401bb0:	0f 85 a8 01 00 00    	jne    401d5e <sigchld_handler+0x2ce>
  401bb6:	48 83 c4 10          	add    $0x10,%rsp
  401bba:	5b                   	pop    %rbx
  401bbb:	5d                   	pop    %rbp
  401bbc:	41 5c                	pop    %r12
  401bbe:	c3                   	retq   
  401bbf:	90                   	nop
  401bc0:	c7 40 08 03 00 00 00 	movl   $0x3,0x8(%rax)
  401bc7:	0f b6 c6             	movzbl %dh,%eax
  401bca:	41 89 c1             	mov    %eax,%r9d
  401bcd:	31 c0                	xor    %eax,%eax
  401bcf:	90                   	nop
  401bd0:	3b 19                	cmp    (%rcx),%ebx
  401bd2:	0f 84 e8 00 00 00    	je     401cc0 <sigchld_handler+0x230>
  401bd8:	83 c0 01             	add    $0x1,%eax
  401bdb:	48 81 c1 0c 04 00 00 	add    $0x40c,%rcx
  401be2:	83 f8 10             	cmp    $0x10,%eax
  401be5:	75 e9                	jne    401bd0 <sigchld_handler+0x140>
  401be7:	31 c9                	xor    %ecx,%ecx
  401be9:	48 8b 3d 30 15 20 00 	mov    0x201530(%rip),%rdi        # 603120 <stdout@@GLIBC_2.2.5>
  401bf0:	41 89 d8             	mov    %ebx,%r8d
  401bf3:	ba 88 21 40 00       	mov    $0x402188,%edx
  401bf8:	be 01 00 00 00       	mov    $0x1,%esi
  401bfd:	31 c0                	xor    %eax,%eax
  401bff:	e8 ec f0 ff ff       	callq  400cf0 <__fprintf_chk@plt>
  401c04:	e9 b7 fe ff ff       	jmpq   401ac0 <sigchld_handler+0x30>
  401c09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401c10:	83 e2 7f             	and    $0x7f,%edx
  401c13:	41 89 d4             	mov    %edx,%r12d
  401c16:	0f 85 38 01 00 00    	jne    401d54 <sigchld_handler+0x2c4>
  401c1c:	ba 80 39 60 00       	mov    $0x603980,%edx
  401c21:	31 c0                	xor    %eax,%eax
  401c23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401c28:	3b 1a                	cmp    (%rdx),%ebx
  401c2a:	0f 84 c8 00 00 00    	je     401cf8 <sigchld_handler+0x268>
  401c30:	83 c0 01             	add    $0x1,%eax
  401c33:	48 81 c2 0c 04 00 00 	add    $0x40c,%rdx
  401c3a:	83 f8 10             	cmp    $0x10,%eax
  401c3d:	75 e9                	jne    401c28 <sigchld_handler+0x198>
  401c3f:	89 de                	mov    %ebx,%esi
  401c41:	bf 80 39 60 00       	mov    $0x603980,%edi
  401c46:	e8 b5 f6 ff ff       	callq  401300 <deletejob>
  401c4b:	85 c0                	test   %eax,%eax
  401c4d:	74 24                	je     401c73 <sigchld_handler+0x1e3>
  401c4f:	8b 0d 0b 15 20 00    	mov    0x20150b(%rip),%ecx        # 603160 <verbose>
  401c55:	85 c9                	test   %ecx,%ecx
  401c57:	0f 84 63 fe ff ff    	je     401ac0 <sigchld_handler+0x30>
  401c5d:	89 d9                	mov    %ebx,%ecx
  401c5f:	44 89 e2             	mov    %r12d,%edx
  401c62:	be b0 21 40 00       	mov    $0x4021b0,%esi
  401c67:	bf 01 00 00 00       	mov    $0x1,%edi
  401c6c:	31 c0                	xor    %eax,%eax
  401c6e:	e8 2d f0 ff ff       	callq  400ca0 <__printf_chk@plt>
  401c73:	8b 15 e7 14 20 00    	mov    0x2014e7(%rip),%edx        # 603160 <verbose>
  401c79:	85 d2                	test   %edx,%edx
  401c7b:	0f 84 3f fe ff ff    	je     401ac0 <sigchld_handler+0x30>
  401c81:	44 0f b6 44 24 05    	movzbl 0x5(%rsp),%r8d
  401c87:	89 d9                	mov    %ebx,%ecx
  401c89:	44 89 e2             	mov    %r12d,%edx
  401c8c:	be 00 22 40 00       	mov    $0x402200,%esi
  401c91:	bf 01 00 00 00       	mov    $0x1,%edi
  401c96:	31 c0                	xor    %eax,%eax
  401c98:	e8 03 f0 ff ff       	callq  400ca0 <__printf_chk@plt>
  401c9d:	e9 1e fe ff ff       	jmpq   401ac0 <sigchld_handler+0x30>
  401ca2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401ca8:	48 98                	cltq   
  401caa:	48 69 c0 0c 04 00 00 	imul   $0x40c,%rax,%rax
  401cb1:	44 8b a0 84 39 60 00 	mov    0x603984(%rax),%r12d
  401cb8:	e9 65 fe ff ff       	jmpq   401b22 <sigchld_handler+0x92>
  401cbd:	0f 1f 00             	nopl   (%rax)
  401cc0:	48 98                	cltq   
  401cc2:	48 69 c0 0c 04 00 00 	imul   $0x40c,%rax,%rax
  401cc9:	8b 88 84 39 60 00    	mov    0x603984(%rax),%ecx
  401ccf:	e9 15 ff ff ff       	jmpq   401be9 <sigchld_handler+0x159>
  401cd4:	0f 1f 40 00          	nopl   0x0(%rax)
  401cd8:	89 d9                	mov    %ebx,%ecx
  401cda:	44 89 e2             	mov    %r12d,%edx
  401cdd:	be b0 21 40 00       	mov    $0x4021b0,%esi
  401ce2:	bf 01 00 00 00       	mov    $0x1,%edi
  401ce7:	31 c0                	xor    %eax,%eax
  401ce9:	e8 b2 ef ff ff       	callq  400ca0 <__printf_chk@plt>
  401cee:	e9 4d fe ff ff       	jmpq   401b40 <sigchld_handler+0xb0>
  401cf3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401cf8:	48 98                	cltq   
  401cfa:	48 69 c0 0c 04 00 00 	imul   $0x40c,%rax,%rax
  401d01:	44 8b a0 84 39 60 00 	mov    0x603984(%rax),%r12d
  401d08:	e9 32 ff ff ff       	jmpq   401c3f <sigchld_handler+0x1af>

  401d0d:	74 0f                	je     401d1e <sigchld_handler+0x28e>
  401d0f:	83 f8 ff             	cmp    $0xffffffff,%eax
  401d12:	75 36                	jne    401d4a <sigchld_handler+0x2ba>
  401d14:	e8 77 ee ff ff       	callq  400b90 <__errno_location@plt>
  401d19:	83 38 0a             	cmpl   $0xa,(%rax)
  401d1c:	75 2c                	jne    401d4a <sigchld_handler+0x2ba>
  401d1e:	8b 05 3c 14 20 00    	mov    0x20143c(%rip),%eax        # 603160 <verbose>
  401d24:	85 c0                	test   %eax,%eax
  401d26:	0f 84 76 fe ff ff    	je     401ba2 <sigchld_handler+0x112>
  401d2c:	bf 3d 24 40 00       	mov    $0x40243d,%edi
  401d31:	e8 7a ee ff ff       	callq  400bb0 <puts@plt>
  401d36:	e9 67 fe ff ff       	jmpq   401ba2 <sigchld_handler+0x112>

  401d3b:	bf fa 23 40 00       	mov    $0x4023fa,%edi
  401d40:	e8 6b ee ff ff       	callq  400bb0 <puts@plt>
  401d45:	e9 6c fd ff ff       	jmpq   401ab6 <sigchld_handler+0x26>

  401d4a:	bf 22 24 40 00       	mov    $0x402422,%edi
  401d4f:	e8 1c f8 ff ff       	callq  401570 <unix_error>
  401d54:	bf 14 24 40 00       	mov    $0x402414,%edi
  401d59:	e8 12 f8 ff ff       	callq  401570 <unix_error>
  401d5e:	e8 7d ee ff ff       	callq  400be0 <__stack_chk_fail@plt>
  401d63:	0f 1f 00             	nopl   (%rax)
  401d66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401d6d:	00 00 00 

0000000000401d70 <sigint_handler>:
  401d70:	8b 0d ea 13 20 00    	mov    0x2013ea(%rip),%ecx        # 603160 <verbose>
  401d76:	53                   	push   %rbx
  401d77:	85 c9                	test   %ecx,%ecx
  401d79:	75 5d                	jne    401dd8 <sigint_handler+0x68>
  401d7b:	b8 80 39 60 00       	mov    $0x603980,%eax
  401d80:	83 78 08 01          	cmpl   $0x1,0x8(%rax)
  401d84:	74 2a                	je     401db0 <sigint_handler+0x40>
  401d86:	48 05 0c 04 00 00    	add    $0x40c,%rax
  401d8c:	48 3d 40 7a 60 00    	cmp    $0x607a40,%rax
  401d92:	75 ec                	jne    401d80 <sigint_handler+0x10>
  401d94:	8b 05 c6 13 20 00    	mov    0x2013c6(%rip),%eax        # 603160 <verbose>
  401d9a:	85 c0                	test   %eax,%eax
  401d9c:	74 34                	je     401dd2 <sigint_handler+0x62>
  401d9e:	5b                   	pop    %rbx
  401d9f:	bf 97 24 40 00       	mov    $0x402497,%edi
  401da4:	e9 07 ee ff ff       	jmpq   400bb0 <puts@plt>
  401da9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401db0:	8b 18                	mov    (%rax),%ebx
  401db2:	85 db                	test   %ebx,%ebx
  401db4:	7e de                	jle    401d94 <sigint_handler+0x24>
  401db6:	89 df                	mov    %ebx,%edi
  401db8:	be 02 00 00 00       	mov    $0x2,%esi
  401dbd:	f7 df                	neg    %edi
  401dbf:	e8 ac ee ff ff       	callq  400c70 <kill@plt>
  401dc4:	85 c0                	test   %eax,%eax
  401dc6:	78 3f                	js     401e07 <sigint_handler+0x97>
  401dc8:	8b 15 92 13 20 00    	mov    0x201392(%rip),%edx        # 603160 <verbose>
  401dce:	85 d2                	test   %edx,%edx
  401dd0:	75 16                	jne    401de8 <sigint_handler+0x78>
  401dd2:	5b                   	pop    %rbx
  401dd3:	c3                   	retq   
  401dd4:	0f 1f 40 00          	nopl   0x0(%rax)
  401dd8:	bf 6a 24 40 00       	mov    $0x40246a,%edi
  401ddd:	e8 ce ed ff ff       	callq  400bb0 <puts@plt>
  401de2:	eb 97                	jmp    401d7b <sigint_handler+0xb>
  401de4:	0f 1f 40 00          	nopl   0x0(%rax)
  401de8:	31 c0                	xor    %eax,%eax
  401dea:	89 da                	mov    %ebx,%edx
  401dec:	be 40 22 40 00       	mov    $0x402240,%esi
  401df1:	bf 01 00 00 00       	mov    $0x1,%edi
  401df6:	e8 a5 ee ff ff       	callq  400ca0 <__printf_chk@plt>
  401dfb:	8b 05 5f 13 20 00    	mov    0x20135f(%rip),%eax        # 603160 <verbose>
  401e01:	85 c0                	test   %eax,%eax
  401e03:	75 99                	jne    401d9e <sigint_handler+0x2e>
  401e05:	eb cb                	jmp    401dd2 <sigint_handler+0x62>
  401e07:	bf 83 24 40 00       	mov    $0x402483,%edi
  401e0c:	e8 5f f7 ff ff       	callq  401570 <unix_error>
  401e11:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401e16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401e1d:	00 00 00 

0000000000401e20 <sigtstp_handler>:
  401e20:	55                   	push   %rbp
  401e21:	53                   	push   %rbx
  401e22:	48 83 ec 08          	sub    $0x8,%rsp
  401e26:	8b 0d 34 13 20 00    	mov    0x201334(%rip),%ecx        # 603160 <verbose>
  401e2c:	85 c9                	test   %ecx,%ecx
  401e2e:	0f 85 ac 00 00 00    	jne    401ee0 <sigtstp_handler+0xc0>
  401e34:	bb 80 39 60 00       	mov    $0x603980,%ebx
  401e39:	48 89 d8             	mov    %rbx,%rax
  401e3c:	0f 1f 40 00          	nopl   0x0(%rax)
  401e40:	83 78 08 01          	cmpl   $0x1,0x8(%rax)
  401e44:	74 3a                	je     401e80 <sigtstp_handler+0x60>
  401e46:	48 05 0c 04 00 00    	add    $0x40c,%rax
  401e4c:	48 3d 40 7a 60 00    	cmp    $0x607a40,%rax
  401e52:	75 ec                	jne    401e40 <sigtstp_handler+0x20>
  401e54:	8b 05 06 13 20 00    	mov    0x201306(%rip),%eax        # 603160 <verbose>
  401e5a:	85 c0                	test   %eax,%eax
  401e5c:	74 12                	je     401e70 <sigtstp_handler+0x50>
  401e5e:	48 83 c4 08          	add    $0x8,%rsp
  401e62:	bf db 24 40 00       	mov    $0x4024db,%edi
  401e67:	5b                   	pop    %rbx
  401e68:	5d                   	pop    %rbp
  401e69:	e9 42 ed ff ff       	jmpq   400bb0 <puts@plt>
  401e6e:	66 90                	xchg   %ax,%ax
  401e70:	48 83 c4 08          	add    $0x8,%rsp
  401e74:	5b                   	pop    %rbx
  401e75:	5d                   	pop    %rbp
  401e76:	c3                   	retq   
  401e77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401e7e:	00 00 
  401e80:	8b 28                	mov    (%rax),%ebp
  401e82:	85 ed                	test   %ebp,%ebp
  401e84:	7e ce                	jle    401e54 <sigtstp_handler+0x34>
  401e86:	89 ef                	mov    %ebp,%edi
  401e88:	be 14 00 00 00       	mov    $0x14,%esi
  401e8d:	f7 df                	neg    %edi
  401e8f:	e8 dc ed ff ff       	callq  400c70 <kill@plt>
  401e94:	85 c0                	test   %eax,%eax
  401e96:	78 68                	js     401f00 <sigtstp_handler+0xe0>
  401e98:	8b 15 c2 12 20 00    	mov    0x2012c2(%rip),%edx        # 603160 <verbose>
  401e9e:	85 d2                	test   %edx,%edx
  401ea0:	74 ce                	je     401e70 <sigtstp_handler+0x50>
  401ea2:	31 c0                	xor    %eax,%eax
  401ea4:	0f 1f 40 00          	nopl   0x0(%rax)
  401ea8:	3b 2b                	cmp    (%rbx),%ebp
  401eaa:	74 43                	je     401eef <sigtstp_handler+0xcf>
  401eac:	83 c0 01             	add    $0x1,%eax
  401eaf:	48 81 c3 0c 04 00 00 	add    $0x40c,%rbx
  401eb6:	83 f8 10             	cmp    $0x10,%eax
  401eb9:	75 ed                	jne    401ea8 <sigtstp_handler+0x88>
  401ebb:	31 d2                	xor    %edx,%edx
  401ebd:	31 c0                	xor    %eax,%eax
  401ebf:	89 e9                	mov    %ebp,%ecx
  401ec1:	be 68 22 40 00       	mov    $0x402268,%esi
  401ec6:	bf 01 00 00 00       	mov    $0x1,%edi
  401ecb:	e8 d0 ed ff ff       	callq  400ca0 <__printf_chk@plt>
  401ed0:	8b 05 8a 12 20 00    	mov    0x20128a(%rip),%eax        # 603160 <verbose>
  401ed6:	85 c0                	test   %eax,%eax
  401ed8:	75 84                	jne    401e5e <sigtstp_handler+0x3e>
  401eda:	eb 94                	jmp    401e70 <sigtstp_handler+0x50>
  401edc:	0f 1f 40 00          	nopl   0x0(%rax)
  401ee0:	bf af 24 40 00       	mov    $0x4024af,%edi
  401ee5:	e8 c6 ec ff ff       	callq  400bb0 <puts@plt>
  401eea:	e9 45 ff ff ff       	jmpq   401e34 <sigtstp_handler+0x14>
  401eef:	48 98                	cltq   
  401ef1:	48 69 c0 0c 04 00 00 	imul   $0x40c,%rax,%rax
  401ef8:	8b 90 84 39 60 00    	mov    0x603984(%rax),%edx
  401efe:	eb bd                	jmp    401ebd <sigtstp_handler+0x9d>
  401f00:	bf c9 24 40 00       	mov    $0x4024c9,%edi
  401f05:	e8 66 f6 ff ff       	callq  401570 <unix_error>
  401f0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000401f10 <app_error>:
  401f10:	48 83 ec 08          	sub    $0x8,%rsp
  401f14:	48 89 f9             	mov    %rdi,%rcx
  401f17:	48 8b 3d 02 12 20 00 	mov    0x201202(%rip),%rdi        # 603120 <stdout@@GLIBC_2.2.5>
  401f1e:	ba 20 23 40 00       	mov    $0x402320,%edx
  401f23:	be 01 00 00 00       	mov    $0x1,%esi
  401f28:	31 c0                	xor    %eax,%eax
  401f2a:	e8 c1 ed ff ff       	callq  400cf0 <__fprintf_chk@plt>
  401f2f:	bf 01 00 00 00       	mov    $0x1,%edi
  401f34:	e8 a7 ed ff ff       	callq  400ce0 <exit@plt>
  401f39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401f40 <Signal>:
  401f40:	53                   	push   %rbx
  401f41:	89 fb                	mov    %edi,%ebx
  401f43:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
  401f4a:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  401f4f:	48 89 34 24          	mov    %rsi,(%rsp)
  401f53:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401f5a:	00 00 
  401f5c:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
  401f63:	00 
  401f64:	31 c0                	xor    %eax,%eax
  401f66:	e8 d5 ec ff ff       	callq  400c40 <sigemptyset@plt>
  401f6b:	48 8d 94 24 a0 00 00 	lea    0xa0(%rsp),%rdx
  401f72:	00 
  401f73:	48 89 e6             	mov    %rsp,%rsi
  401f76:	89 df                	mov    %ebx,%edi
  401f78:	c7 84 24 88 00 00 00 	movl   $0x10000000,0x88(%rsp)
  401f7f:	00 00 00 10 
  401f83:	e8 48 ec ff ff       	callq  400bd0 <sigaction@plt>
  401f88:	85 c0                	test   %eax,%eax
  401f8a:	78 24                	js     401fb0 <Signal+0x70>
  401f8c:	48 8b 8c 24 38 01 00 	mov    0x138(%rsp),%rcx
  401f93:	00 
  401f94:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  401f9b:	00 00 
  401f9d:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
  401fa4:	00 
  401fa5:	75 13                	jne    401fba <Signal+0x7a>
  401fa7:	48 81 c4 40 01 00 00 	add    $0x140,%rsp
  401fae:	5b                   	pop    %rbx
  401faf:	c3                   	retq   
  401fb0:	bf f4 24 40 00       	mov    $0x4024f4,%edi
  401fb5:	e8 b6 f5 ff ff       	callq  401570 <unix_error>
  401fba:	e8 21 ec ff ff       	callq  400be0 <__stack_chk_fail@plt>
  401fbf:	90                   	nop

0000000000401fc0 <__libc_csu_init>:
  401fc0:	41 57                	push   %r15
  401fc2:	41 56                	push   %r14
  401fc4:	41 89 ff             	mov    %edi,%r15d
  401fc7:	41 55                	push   %r13
  401fc9:	41 54                	push   %r12
  401fcb:	4c 8d 25 3e 0e 20 00 	lea    0x200e3e(%rip),%r12        # 602e10 <__frame_dummy_init_array_entry>
  401fd2:	55                   	push   %rbp
  401fd3:	48 8d 2d 3e 0e 20 00 	lea    0x200e3e(%rip),%rbp        # 602e18 <__do_global_dtors_aux_fini_array_entry>
  401fda:	53                   	push   %rbx
  401fdb:	49 89 f6             	mov    %rsi,%r14
  401fde:	49 89 d5             	mov    %rdx,%r13
  401fe1:	4c 29 e5             	sub    %r12,%rbp
  401fe4:	48 83 ec 08          	sub    $0x8,%rsp
  401fe8:	48 c1 fd 03          	sar    $0x3,%rbp
  401fec:	e8 57 eb ff ff       	callq  400b48 <_init>
  401ff1:	48 85 ed             	test   %rbp,%rbp
  401ff4:	74 20                	je     402016 <__libc_csu_init+0x56>
  401ff6:	31 db                	xor    %ebx,%ebx
  401ff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401fff:	00 
  402000:	4c 89 ea             	mov    %r13,%rdx
  402003:	4c 89 f6             	mov    %r14,%rsi
  402006:	44 89 ff             	mov    %r15d,%edi
  402009:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40200d:	48 83 c3 01          	add    $0x1,%rbx
  402011:	48 39 eb             	cmp    %rbp,%rbx
  402014:	75 ea                	jne    402000 <__libc_csu_init+0x40>
  402016:	48 83 c4 08          	add    $0x8,%rsp
  40201a:	5b                   	pop    %rbx
  40201b:	5d                   	pop    %rbp
  40201c:	41 5c                	pop    %r12
  40201e:	41 5d                	pop    %r13
  402020:	41 5e                	pop    %r14
  402022:	41 5f                	pop    %r15
  402024:	c3                   	retq   
  402025:	90                   	nop
  402026:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40202d:	00 00 00 

0000000000402030 <__libc_csu_fini>:
  402030:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000402034 <_fini>:
  402034:	48 83 ec 08          	sub    $0x8,%rsp
  402038:	48 83 c4 08          	add    $0x8,%rsp
  40203c:	c3                   	retq   
